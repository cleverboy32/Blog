"use strict";(self.webpackChunkreact_wyz=self.webpackChunkreact_wyz||[]).push([[843],{843:(n,e,s)=>{s.r(e),s.d(e,{default:()=>t});const t='### **什么是PWA** \n先说一下全名，progressive web app： 渐进式网页应用。这是谷歌推出的，我是这样理解的：\n\n- 我们一般写web应用，在 pc 上是没有缓存的，打开页面的时去请求数据。\n\n-  第二个也没有像 app 一样的小图标放在桌面，一点开就进入了应用，而是通过打开浏览器输入网址， \n\n- 第三个就是，不能像 app 一样给用户推送消息，像微博会跟你推送说有谁评论了你的微博之类的功能。 \n\n而谷歌推出的 pwa，就是具有这些了这些特点， 使我们的 web 应用，能够像一款 app 一样使用。并且对比与 app, 它不用复杂的安装，也不用下载更新包，刷新页面就可以了(注意到缓存的处理)。\n\n#### **那么这些功能分别是怎么实现的呢？** \n**关于缓存**\n\n其实这个就是 我们平时做的 Session 啊、localStorage、CacheStorage 之类的。\n\n这里用的就是 [cacheStorage](https://developer.mozilla.org/zh-CN/docs/Web/API/CacheStorage) 缓存，它提供了一个ServiceWorker类型的工作者或window范围可以访问的所有命名缓存的主目录, 并维护字符串的映射名称到相应的 Cache 对象。\n主要方法包括： \n![这里写图片描述](https://img-blog.csdn.net/20171112212302073?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFkYWRlZ2FuaHVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n有了这些方法你可以对你的缓存进行操作。目前还在草案状态，仅火狐和谷歌浏览器支持此特性。\n\nPWA是通过 ServiceWorker 访问 cache ,所以需要注册 ServiceWorker 工作者。在之前别忘记判断浏览器是否支持。\n\n```\nif (\'serviceWorker\' in navigator) {\n\tnavigator.serviceWorker.register(sw.js) // 注册sw.js 文件中变成的服务对象，返回注册成功的对象\n\t.then(function(swReg){\n          swRegistration = swReg;\n     }).catch(function(error) {\n          console.error(\'Service Worker Error\', error);\n     });\n}\n```\n这个 [Service Worker](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) 服务工作者就厉害了，它相当于浏览器和网络之间的代理服务器，可以拦截网络请求，做一些你可能需要的处理(请求资源从缓存中获取等)。\n\n-  它能够创建有效的离线体验，拦截网络请求，并根据网络是否可用判断是否使用缓存数据或者更新缓存数据。\n\n-  它们还允许访问推送的通知和后台的API。\n\n关于 sw.js 中具体的缓存的代码：\n\n创建需要缓存的文件\n\n```\n\'use strict\'\nlet cacheName = \'pwa-demo-assets\'; // 缓存名字\nlet imgCacheName = \'pwa-img\';\nlet filesToCache;\nfilesToCache = [ // 所需缓存的文件\n    \'/\',\n    \'/index.html\',\n    \'/scripts/app.js\',\n    \'/assets/imgs/48.png\',\n    \'/assets/imgs/96.png\',\n    \'/assets/imgs/192.png\',\n    \'/dist/js/app.js\',\n    \'/manifest.json\'\n];\n\nself.addEventListener(\'install\', function(e) {\n    e.waitUntil(\n\t    // 安装服务者时，对需要缓存的文件进行缓存\n        caches.open(cacheName).then(function(cache) {\n            return cache.addAll(filesToCache);\n        })\n    );\n});\n\n\nself.addEventListener(\'fetch\', (e) => {\n    // 判断地址是不是需要实时去请求，是就继续发送请求\n    if (e.request.url.indexOf(\'/api/400/200\') > -1) {\n        e.respondWith(\n            caches.open(imgCacheName).then(function(cache){\n                 return fetch(e.request).then(function (response){\n                    cache.put(e.request.url, response.clone()); // 每请求一次缓存更新一次新加载的图片\n                    return response;\n                });\n            })\n        );\n    } else {\n        e.respondWith(\n\t        // 匹配到缓存资源，就从缓存中返回数据\n            caches.match(e.request).then(function (response) {\n                return response || fetch(e.request);\n            })\n        );\n    }\n\n});\n```\n\n**这里进而就引入到 pwa 的推送通知功能。这都是通过 ServiceWorker 去实现的。**\n\n基本原理是，你的客户端要和推送服务进行绑定，会生成一个绑定后的推送服务API接口，服务端调用此接口，发送消息。同时，浏览器也要支持推送功能，在注册 sw 时, 加上推送功能的判断。\n\n```\nif (\'serviceWorker\' in navigator && \'PushManager\' in window) {\n\tnavigator.serviceWorker.register(sw.js)\n\t.then(function(swReg) {\n        swRegistration = swReg;\n    }).catch(function(error) {\n        console.error(\'Service Worker Error\', error);\n        });\n } else {\n     console.warn(\'Push messaging is not supported\');\n }\n```\nPushManager 注册好之后， 那么要做的就是浏览器和服务器的绑定了。\n\n![这里写图片描述](https://img-blog.csdn.net/20171112203347222?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFkYWRlZ2FuaHVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n此图是用户订阅某个应用程序的推送服务。\n客户端传入应用程序服务器公钥，向将生成端点的 `webpush 服务器`( 这是谷歌自己实现的一个推送功能的服务器)发出网络请求，将生成的端点(一个推送服务)与应用程序公钥关联，并将端点返回给应用程序。浏览器会将此端点添加到 PushSubscription，通过 promise异步成功时，可以将它的信息保存到你的数据库。\n\n![这里写图片描述](https://img-blog.csdn.net/20171112203753820?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFkYWRlZ2FuaHVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n服务器发送推送的时候,请求相关接口，验证成功后推送服务会发消息给客户端。\n\n**最后关于桌面小图标**\n\n这个可以说是非常简单了，就是一个manifest.json配置文件，然后在页面引入此文件就好了\n\n```\n\x3c!-- 加载清单 --\x3e\n<link rel="manifest" href="./manifest.json">\n```\n关于[清单内容](https://developers.google.com/web/fundamentals/web-app-manifest/)这里简单介绍一下：\n\n```\n{\n    "short_name": "pwa",\n    "name": "pwa - demo", // 应用名称\n    "icons": [ // 应用显示图标，根据容器大小适配\n        {\n            "src": "assets/imgs/48.png",\n            "type": "image/png",\n            "sizes": "48x48"\n        },\n        {\n            "src": "assets/imgs/96.png",\n            "type": "image/png",\n            "sizes": "96x96"\n        },\n        {\n            "src": "assets/imgs/192.png",\n            "type": "image/png",\n            "sizes": "192x192"\n        }\n    ],\n    "background_color": "#2196F3", // 刚打开页面时的背景\n    "theme_color": "#2196F3", // 主题颜色\n    "display": "standalone", //独立显示\n    "start_url": "index.html?launcher=true" // 启动的页面\n}\n```\n好了， 如果感兴趣赶快上手吧。\n可以查看[谷歌官方教程](https://developers.google.com/web/progressive-web-apps/)。\n\n这里说一下坑的点，\tPWA应用需要在本地localhost:8080 上运行或者 https 协议下， 要保证你的页面是安全页面。\n\n添加桌面时，确保你的谷歌浏览器可以显示弹出通知。\n\n如果你要自己实现推送，自己服务器要有公钥和私钥的获取， 这里可以通过 https://web-push-codelab.glitch.me 获取， 用 chrome 的 [webpush](https://github.com/zaru/webpush) 推送。\n\n这里也可以看一下我的[ GitHub 项项目 ](https://github.com/cleverboy32/chorme-PwaDemo)，官方也有很多例子。'}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoia0lBQUEsMG9LIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3Rfd3l6Ly4uLy4uL2Jsb2dzL21hcmtkb3duL3B3YS5tZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiMjIyAqKuS7gOS5iOaYr1BXQSoqIFxcbuWFiOivtOS4gOS4i+WFqOWQje+8jHByb2dyZXNzaXZlIHdlYiBhcHDvvJog5riQ6L+b5byP572R6aG15bqU55So44CC6L+Z5piv6LC35q2M5o6o5Ye655qE77yM5oiR5piv6L+Z5qC355CG6Kej55qE77yaXFxuXFxuLSDmiJHku6zkuIDoiKzlhpl3ZWLlupTnlKjvvIzlnKggcGMg5LiK5piv5rKh5pyJ57yT5a2Y55qE77yM5omT5byA6aG16Z2i55qE5pe25Y676K+35rGC5pWw5o2u44CCXFxuXFxuLSAg56ys5LqM5Liq5Lmf5rKh5pyJ5YOPIGFwcCDkuIDmoLfnmoTlsI/lm77moIfmlL7lnKjmoYzpnaLvvIzkuIDngrnlvIDlsLHov5vlhaXkuoblupTnlKjvvIzogIzmmK/pgJrov4fmiZPlvIDmtY/op4jlmajovpPlhaXnvZHlnYDvvIwgXFxuXFxuLSDnrKzkuInkuKrlsLHmmK/vvIzkuI3og73lg48gYXBwIOS4gOagt+e7meeUqOaIt+aOqOmAgea2iOaBr++8jOWDj+W+ruWNmuS8mui3n+S9oOaOqOmAgeivtOacieiwgeivhOiuuuS6huS9oOeahOW+ruWNmuS5i+exu+eahOWKn+iDveOAgiBcXG5cXG7ogIzosLfmrYzmjqjlh7rnmoQgcHdh77yM5bCx5piv5YW35pyJ6L+Z5Lqb5LqG6L+Z5Lqb54m554K577yMIOS9v+aIkeS7rOeahCB3ZWIg5bqU55So77yM6IO95aSf5YOP5LiA5qy+IGFwcCDkuIDmoLfkvb/nlKjjgILlubbkuJTlr7nmr5TkuI4gYXBwLCDlroPkuI3nlKjlpI3mnYLnmoTlronoo4XvvIzkuZ/kuI3nlKjkuIvovb3mm7TmlrDljIXvvIzliLfmlrDpobXpnaLlsLHlj6/ku6XkuoYo5rOo5oSP5Yiw57yT5a2Y55qE5aSE55CGKeOAglxcblxcbiMjIyMgKirpgqPkuYjov5nkupvlip/og73liIbliKvmmK/mgI7kuYjlrp7njrDnmoTlkaLvvJ8qKiBcXG4qKuWFs+S6jue8k+WtmCoqXFxuXFxu5YW25a6e6L+Z5Liq5bCx5pivIOaIkeS7rOW5s+aXtuWBmueahCBTZXNzaW9uIOWViuOAgWxvY2FsU3RvcmFnZeOAgUNhY2hlU3RvcmFnZSDkuYvnsbvnmoTjgIJcXG5cXG7ov5nph4znlKjnmoTlsLHmmK8gW2NhY2hlU3RvcmFnZV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NhY2hlU3RvcmFnZSkg57yT5a2Y77yM5a6D5o+Q5L6b5LqG5LiA5LiqU2VydmljZVdvcmtlcuexu+Wei+eahOW3peS9nOiAheaIlndpbmRvd+iMg+WbtOWPr+S7peiuv+mXrueahOaJgOacieWRveWQjee8k+WtmOeahOS4u+ebruW9lSwg5bm257u05oqk5a2X56ym5Liy55qE5pig5bCE5ZCN56ew5Yiw55u45bqU55qEIENhY2hlIOWvueixoeOAglxcbuS4u+imgeaWueazleWMheaLrO+8miBcXG4hW+i/memHjOWGmeWbvueJh+aPj+i/sF0oaHR0cHM6Ly9pbWctYmxvZy5jc2RuLm5ldC8yMDE3MTExMjIxMjMwMjA3Mz93YXRlcm1hcmsvMi90ZXh0L2FIUjBjRG92TDJKc2IyY3VZM05rYmk1dVpYUXZaR0ZrWVdSbFoyRnVhSFZ2L2ZvbnQvNWE2TDVMMlQvZm9udHNpemUvNDAwL2ZpbGwvSTBKQlFrRkNNQT09L2Rpc3NvbHZlLzcwL2dyYXZpdHkvU291dGhFYXN0KVxcbuacieS6hui/meS6m+aWueazleS9oOWPr+S7peWvueS9oOeahOe8k+WtmOi/m+ihjOaTjeS9nOOAguebruWJjei/mOWcqOiNieahiOeKtuaAge+8jOS7heeBq+eLkOWSjOiwt+atjOa1j+iniOWZqOaUr+aMgeatpOeJueaAp+OAglxcblxcblBXQeaYr+mAmui/hyBTZXJ2aWNlV29ya2VyIOiuv+mXriBjYWNoZSAs5omA5Lul6ZyA6KaB5rOo5YaMIFNlcnZpY2VXb3JrZXIg5bel5L2c6ICF44CC5Zyo5LmL5YmN5Yir5b+Y6K6w5Yik5pat5rWP6KeI5Zmo5piv5ZCm5pSv5oyB44CCXFxuXFxuYGBgXFxuaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcXG5cXHRuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3Rlcihzdy5qcykgLy8g5rOo5YaMc3cuanMg5paH5Lu25Lit5Y+Y5oiQ55qE5pyN5Yqh5a+56LGh77yM6L+U5Zue5rOo5YaM5oiQ5Yqf55qE5a+56LGhXFxuXFx0LnRoZW4oZnVuY3Rpb24oc3dSZWcpe1xcbiAgICAgICAgICBzd1JlZ2lzdHJhdGlvbiA9IHN3UmVnO1xcbiAgICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcXG4gICAgICAgICAgY29uc29sZS5lcnJvcignU2VydmljZSBXb3JrZXIgRXJyb3InLCBlcnJvcik7XFxuICAgICB9KTtcXG59XFxuYGBgXFxu6L+Z5LiqIFtTZXJ2aWNlIFdvcmtlcl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1NlcnZpY2VfV29ya2VyX0FQSSkg5pyN5Yqh5bel5L2c6ICF5bCx5Y6J5a6z5LqG77yM5a6D55u45b2T5LqO5rWP6KeI5Zmo5ZKM572R57uc5LmL6Ze055qE5Luj55CG5pyN5Yqh5Zmo77yM5Y+v5Lul5oum5oiq572R57uc6K+35rGC77yM5YGa5LiA5Lqb5L2g5Y+v6IO96ZyA6KaB55qE5aSE55CGKOivt+axgui1hOa6kOS7jue8k+WtmOS4reiOt+WPluetiSnjgIJcXG5cXG4tICDlroPog73lpJ/liJvlu7rmnInmlYjnmoTnprvnur/kvZPpqozvvIzmi6bmiKrnvZHnu5zor7fmsYLvvIzlubbmoLnmja7nvZHnu5zmmK/lkKblj6/nlKjliKTmlq3mmK/lkKbkvb/nlKjnvJPlrZjmlbDmja7miJbogIXmm7TmlrDnvJPlrZjmlbDmja7jgIJcXG5cXG4tICDlroPku6zov5jlhYHorrjorr/pl67mjqjpgIHnmoTpgJrnn6XlkozlkI7lj7DnmoRBUEnjgIJcXG5cXG7lhbPkuo4gc3cuanMg5Lit5YW35L2T55qE57yT5a2Y55qE5Luj56CB77yaXFxuXFxu5Yib5bu66ZyA6KaB57yT5a2Y55qE5paH5Lu2XFxuXFxuYGBgXFxuJ3VzZSBzdHJpY3QnXFxubGV0IGNhY2hlTmFtZSA9ICdwd2EtZGVtby1hc3NldHMnOyAvLyDnvJPlrZjlkI3lrZdcXG5sZXQgaW1nQ2FjaGVOYW1lID0gJ3B3YS1pbWcnO1xcbmxldCBmaWxlc1RvQ2FjaGU7XFxuZmlsZXNUb0NhY2hlID0gWyAvLyDmiYDpnIDnvJPlrZjnmoTmlofku7ZcXG4gICAgJy8nLFxcbiAgICAnL2luZGV4Lmh0bWwnLFxcbiAgICAnL3NjcmlwdHMvYXBwLmpzJyxcXG4gICAgJy9hc3NldHMvaW1ncy80OC5wbmcnLFxcbiAgICAnL2Fzc2V0cy9pbWdzLzk2LnBuZycsXFxuICAgICcvYXNzZXRzL2ltZ3MvMTkyLnBuZycsXFxuICAgICcvZGlzdC9qcy9hcHAuanMnLFxcbiAgICAnL21hbmlmZXN0Lmpzb24nXFxuXTtcXG5cXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2luc3RhbGwnLCBmdW5jdGlvbihlKSB7XFxuICAgIGUud2FpdFVudGlsKFxcblxcdCAgICAvLyDlronoo4XmnI3liqHogIXml7bvvIzlr7npnIDopoHnvJPlrZjnmoTmlofku7bov5vooYznvJPlrZhcXG4gICAgICAgIGNhY2hlcy5vcGVuKGNhY2hlTmFtZSkudGhlbihmdW5jdGlvbihjYWNoZSkge1xcbiAgICAgICAgICAgIHJldHVybiBjYWNoZS5hZGRBbGwoZmlsZXNUb0NhY2hlKTtcXG4gICAgICAgIH0pXFxuICAgICk7XFxufSk7XFxuXFxuXFxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdmZXRjaCcsIChlKSA9PiB7XFxuICAgIC8vIOWIpOaWreWcsOWdgOaYr+S4jeaYr+mcgOimgeWunuaXtuWOu+ivt+axgu+8jOaYr+Wwsee7p+e7reWPkemAgeivt+axglxcbiAgICBpZiAoZS5yZXF1ZXN0LnVybC5pbmRleE9mKCcvYXBpLzQwMC8yMDAnKSA+IC0xKSB7XFxuICAgICAgICBlLnJlc3BvbmRXaXRoKFxcbiAgICAgICAgICAgIGNhY2hlcy5vcGVuKGltZ0NhY2hlTmFtZSkudGhlbihmdW5jdGlvbihjYWNoZSl7XFxuICAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goZS5yZXF1ZXN0KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSl7XFxuICAgICAgICAgICAgICAgICAgICBjYWNoZS5wdXQoZS5yZXF1ZXN0LnVybCwgcmVzcG9uc2UuY2xvbmUoKSk7IC8vIOavj+ivt+axguS4gOasoee8k+WtmOabtOaWsOS4gOasoeaWsOWKoOi9veeahOWbvueJh1xcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xcbiAgICAgICAgICAgICAgICB9KTtcXG4gICAgICAgICAgICB9KVxcbiAgICAgICAgKTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICAgIGUucmVzcG9uZFdpdGgoXFxuXFx0ICAgICAgICAvLyDljLnphY3liLDnvJPlrZjotYTmupDvvIzlsLHku47nvJPlrZjkuK3ov5Tlm57mlbDmja5cXG4gICAgICAgICAgICBjYWNoZXMubWF0Y2goZS5yZXF1ZXN0KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UgfHwgZmV0Y2goZS5yZXF1ZXN0KTtcXG4gICAgICAgICAgICB9KVxcbiAgICAgICAgKTtcXG4gICAgfVxcblxcbn0pO1xcbmBgYFxcblxcbioq6L+Z6YeM6L+b6ICM5bCx5byV5YWl5YiwIHB3YSDnmoTmjqjpgIHpgJrnn6Xlip/og73jgILov5npg73mmK/pgJrov4cgU2VydmljZVdvcmtlciDljrvlrp7njrDnmoTjgIIqKlxcblxcbuWfuuacrOWOn+eQhuaYr++8jOS9oOeahOWuouaIt+err+imgeWSjOaOqOmAgeacjeWKoei/m+ihjOe7keWumu+8jOS8mueUn+aIkOS4gOS4que7keWumuWQjueahOaOqOmAgeacjeWKoUFQSeaOpeWPo++8jOacjeWKoeerr+iwg+eUqOatpOaOpeWPo++8jOWPkemAgea2iOaBr+OAguWQjOaXtu+8jOa1j+iniOWZqOS5n+imgeaUr+aMgeaOqOmAgeWKn+iDve+8jOWcqOazqOWGjCBzdyDml7YsIOWKoOS4iuaOqOmAgeWKn+iDveeahOWIpOaWreOAglxcblxcbmBgYFxcbmlmICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yICYmICdQdXNoTWFuYWdlcicgaW4gd2luZG93KSB7XFxuXFx0bmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoc3cuanMpXFxuXFx0LnRoZW4oZnVuY3Rpb24oc3dSZWcpIHtcXG4gICAgICAgIHN3UmVnaXN0cmF0aW9uID0gc3dSZWc7XFxuICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XFxuICAgICAgICBjb25zb2xlLmVycm9yKCdTZXJ2aWNlIFdvcmtlciBFcnJvcicsIGVycm9yKTtcXG4gICAgICAgIH0pO1xcbiB9IGVsc2Uge1xcbiAgICAgY29uc29sZS53YXJuKCdQdXNoIG1lc3NhZ2luZyBpcyBub3Qgc3VwcG9ydGVkJyk7XFxuIH1cXG5gYGBcXG5QdXNoTWFuYWdlciDms6jlhozlpb3kuYvlkI7vvIwg6YKj5LmI6KaB5YGa55qE5bCx5piv5rWP6KeI5Zmo5ZKM5pyN5Yqh5Zmo55qE57uR5a6a5LqG44CCXFxuXFxuIVvov5nph4zlhpnlm77niYfmj4/ov7BdKGh0dHBzOi8vaW1nLWJsb2cuY3Nkbi5uZXQvMjAxNzExMTIyMDMzNDcyMjI/d2F0ZXJtYXJrLzIvdGV4dC9hSFIwY0RvdkwySnNiMmN1WTNOa2JpNXVaWFF2WkdGa1lXUmxaMkZ1YUhWdi9mb250LzVhNkw1TDJUL2ZvbnRzaXplLzQwMC9maWxsL0kwSkJRa0ZDTUE9PS9kaXNzb2x2ZS83MC9ncmF2aXR5L1NvdXRoRWFzdClcXG7mraTlm77mmK/nlKjmiLforqLpmIXmn5DkuKrlupTnlKjnqIvluo/nmoTmjqjpgIHmnI3liqHjgIJcXG7lrqLmiLfnq6/kvKDlhaXlupTnlKjnqIvluo/mnI3liqHlmajlhazpkqXvvIzlkJHlsIbnlJ/miJDnq6/ngrnnmoQgYHdlYnB1c2gg5pyN5Yqh5ZmoYCgg6L+Z5piv6LC35q2M6Ieq5bex5a6e546w55qE5LiA5Liq5o6o6YCB5Yqf6IO955qE5pyN5Yqh5ZmoKeWPkeWHuue9kee7nOivt+axgu+8jOWwhueUn+aIkOeahOerr+eCuSjkuIDkuKrmjqjpgIHmnI3liqEp5LiO5bqU55So56iL5bqP5YWs6ZKl5YWz6IGU77yM5bm25bCG56uv54K56L+U5Zue57uZ5bqU55So56iL5bqP44CC5rWP6KeI5Zmo5Lya5bCG5q2k56uv54K55re75Yqg5YiwIFB1c2hTdWJzY3JpcHRpb27vvIzpgJrov4cgcHJvbWlzZeW8guatpeaIkOWKn+aXtu+8jOWPr+S7peWwhuWug+eahOS/oeaBr+S/neWtmOWIsOS9oOeahOaVsOaNruW6k+OAglxcblxcbiFb6L+Z6YeM5YaZ5Zu+54mH5o+P6L+wXShodHRwczovL2ltZy1ibG9nLmNzZG4ubmV0LzIwMTcxMTEyMjAzNzUzODIwP3dhdGVybWFyay8yL3RleHQvYUhSMGNEb3ZMMkpzYjJjdVkzTmtiaTV1WlhRdlpHRmtZV1JsWjJGdWFIVnYvZm9udC81YTZMNUwyVC9mb250c2l6ZS80MDAvZmlsbC9JMEpCUWtGQ01BPT0vZGlzc29sdmUvNzAvZ3Jhdml0eS9Tb3V0aEVhc3QpXFxu5pyN5Yqh5Zmo5Y+R6YCB5o6o6YCB55qE5pe25YCZLOivt+axguebuOWFs+aOpeWPo++8jOmqjOivgeaIkOWKn+WQjuaOqOmAgeacjeWKoeS8muWPkea2iOaBr+e7meWuouaIt+err+OAglxcblxcbioq5pyA5ZCO5YWz5LqO5qGM6Z2i5bCP5Zu+5qCHKipcXG5cXG7ov5nkuKrlj6/ku6Xor7TmmK/pnZ7luLjnroDljZXkuobvvIzlsLHmmK/kuIDkuKptYW5pZmVzdC5qc29u6YWN572u5paH5Lu277yM54S25ZCO5Zyo6aG16Z2i5byV5YWl5q2k5paH5Lu25bCx5aW95LqGXFxuXFxuYGBgXFxuPCEtLSDliqDovb3muIXljZUgLS0+XFxuPGxpbmsgcmVsPVxcXCJtYW5pZmVzdFxcXCIgaHJlZj1cXFwiLi9tYW5pZmVzdC5qc29uXFxcIj5cXG5gYGBcXG7lhbPkuo5b5riF5Y2V5YaF5a65XShodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS93ZWIvZnVuZGFtZW50YWxzL3dlYi1hcHAtbWFuaWZlc3QvKei/memHjOeugOWNleS7i+e7jeS4gOS4i++8mlxcblxcbmBgYFxcbntcXG4gICAgXFxcInNob3J0X25hbWVcXFwiOiBcXFwicHdhXFxcIixcXG4gICAgXFxcIm5hbWVcXFwiOiBcXFwicHdhIC0gZGVtb1xcXCIsIC8vIOW6lOeUqOWQjeensFxcbiAgICBcXFwiaWNvbnNcXFwiOiBbIC8vIOW6lOeUqOaYvuekuuWbvuagh++8jOagueaNruWuueWZqOWkp+Wwj+mAgumFjVxcbiAgICAgICAge1xcbiAgICAgICAgICAgIFxcXCJzcmNcXFwiOiBcXFwiYXNzZXRzL2ltZ3MvNDgucG5nXFxcIixcXG4gICAgICAgICAgICBcXFwidHlwZVxcXCI6IFxcXCJpbWFnZS9wbmdcXFwiLFxcbiAgICAgICAgICAgIFxcXCJzaXplc1xcXCI6IFxcXCI0OHg0OFxcXCJcXG4gICAgICAgIH0sXFxuICAgICAgICB7XFxuICAgICAgICAgICAgXFxcInNyY1xcXCI6IFxcXCJhc3NldHMvaW1ncy85Ni5wbmdcXFwiLFxcbiAgICAgICAgICAgIFxcXCJ0eXBlXFxcIjogXFxcImltYWdlL3BuZ1xcXCIsXFxuICAgICAgICAgICAgXFxcInNpemVzXFxcIjogXFxcIjk2eDk2XFxcIlxcbiAgICAgICAgfSxcXG4gICAgICAgIHtcXG4gICAgICAgICAgICBcXFwic3JjXFxcIjogXFxcImFzc2V0cy9pbWdzLzE5Mi5wbmdcXFwiLFxcbiAgICAgICAgICAgIFxcXCJ0eXBlXFxcIjogXFxcImltYWdlL3BuZ1xcXCIsXFxuICAgICAgICAgICAgXFxcInNpemVzXFxcIjogXFxcIjE5MngxOTJcXFwiXFxuICAgICAgICB9XFxuICAgIF0sXFxuICAgIFxcXCJiYWNrZ3JvdW5kX2NvbG9yXFxcIjogXFxcIiMyMTk2RjNcXFwiLCAvLyDliJrmiZPlvIDpobXpnaLml7bnmoTog4zmma9cXG4gICAgXFxcInRoZW1lX2NvbG9yXFxcIjogXFxcIiMyMTk2RjNcXFwiLCAvLyDkuLvpopjpopzoibJcXG4gICAgXFxcImRpc3BsYXlcXFwiOiBcXFwic3RhbmRhbG9uZVxcXCIsIC8v54us56uL5pi+56S6XFxuICAgIFxcXCJzdGFydF91cmxcXFwiOiBcXFwiaW5kZXguaHRtbD9sYXVuY2hlcj10cnVlXFxcIiAvLyDlkK/liqjnmoTpobXpnaJcXG59XFxuYGBgXFxu5aW95LqG77yMIOWmguaenOaEn+WFtOi2o+i1tuW/q+S4iuaJi+WQp+OAglxcbuWPr+S7peafpeeci1vosLfmrYzlrpjmlrnmlZnnqItdKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi9wcm9ncmVzc2l2ZS13ZWItYXBwcy8p44CCXFxuXFxu6L+Z6YeM6K+05LiA5LiL5Z2R55qE54K577yMXFx0UFdB5bqU55So6ZyA6KaB5Zyo5pys5ZywbG9jYWxob3N0OjgwODAg5LiK6L+Q6KGM5oiW6ICFIGh0dHBzIOWNj+iuruS4i++8jCDopoHkv53or4HkvaDnmoTpobXpnaLmmK/lronlhajpobXpnaLjgIJcXG5cXG7mt7vliqDmoYzpnaLml7bvvIznoa7kv53kvaDnmoTosLfmrYzmtY/op4jlmajlj6/ku6XmmL7npLrlvLnlh7rpgJrnn6XjgIJcXG5cXG7lpoLmnpzkvaDopoHoh6rlt7Hlrp7njrDmjqjpgIHvvIzoh6rlt7HmnI3liqHlmajopoHmnInlhazpkqXlkoznp4HpkqXnmoTojrflj5bvvIwg6L+Z6YeM5Y+v5Lul6YCa6L+HIGh0dHBzOi8vd2ViLXB1c2gtY29kZWxhYi5nbGl0Y2gubWUg6I635Y+W77yMIOeUqCBjaHJvbWUg55qEIFt3ZWJwdXNoXShodHRwczovL2dpdGh1Yi5jb20vemFydS93ZWJwdXNoKSDmjqjpgIHjgIJcXG5cXG7ov5nph4zkuZ/lj6/ku6XnnIvkuIDkuIvmiJHnmoRbIEdpdEh1YiDpobnpobnnm64gXShodHRwczovL2dpdGh1Yi5jb20vY2xldmVyYm95MzIvY2hvcm1lLVB3YURlbW8p77yM5a6Y5pa55Lmf5pyJ5b6I5aSa5L6L5a2Q44CCXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9