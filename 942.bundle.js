"use strict";(self.webpackChunkreact_wyz=self.webpackChunkreact_wyz||[]).push([[942],{8942:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});const o="### 二叉树判断 root 树是否包含该子树\n\n```js\n\n\nfunction isSameTree(root, subRoot) {\n    if (!root && !subRoot) return true;\n    if (!root || !subRoot) return false;\n    if (root.val !== subRoot.val) return false;\n    return isSameTree(root.left, subRoot.left) && isSameTree(root.right, subRoot.right);\n}\n\n\nfunction isIncludeSubTree(root, subRoot) {\n    if (!root) return false;\n    return isSameTree(root, subRoot) || isIncludeSubTree(root.left, subRoot) || isIncludeSubTree(root.right, subRoot);\n}\n\n```\n\n### debounce 和 throttle 实现 和 lock class 锁的实现\n\n```js\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout); // 清除之前的定时器\n    timeout = setTimeout(() => {\n      func.apply(this, args); // 执行函数\n    }, wait);\n  };\n}\n\nfunction throttle(func, wait) {\n  let lastTime = 0;\n  return function (...args) {\n    const now = Date.now();\n    if (now - lastTime >= wait) {\n      func.apply(this, args); // 执行函数\n      lastTime = now; // 更新上次执行时间\n    }\n  };\n}\n\n\nclass Lock {\n    constructor() {\n        this.isLocked = false; // 锁的状态\n    }\n\n    acquire() {\n        if (this.isLocked) {\n        return false; // 如果锁已被占用，返回 false\n        }\n        this.isLocked = true; // 占用锁\n        return true;\n    }\n\n    release() {\n        this.isLocked = false; // 释放锁\n    }\n}\n\nconst lock = new Lock();\n\nfunction submitForm() {\n  if (lock.acquire()) {\n    console.log('Form submitted');\n    setTimeout(() => {\n      lock.release(); // 模拟异步操作完成后释放锁\n    }, 1000);\n  } else {\n    console.log('Form is already submitting...');\n  }\n}\n\ndocument.getElementById('submit').addEventListener('click', submitForm);\n\n```\n\n\n\n\n### form的组件设计与实现\n\n设计和实现一个 `Form` 组件是组件库开发中的一个重要且复杂的任务。`Form` 组件不仅需要处理表单的布局和样式，还需要管理表单数据、验证、提交等逻辑。以下是关于 `Form` 组件难度设计的详细指南：\n\n---\n\n### **1. 基础功能**\n#### **表单布局**\n- 支持多种布局方式（如水平布局、垂直布局、栅格布局）。\n- 提供表单标签、输入框、按钮等基础组件的集成。\n\n布局设计：\n```css\n.form {\n  width: 100%;\n}\n\n.form-item {\n  margin-bottom: 16px;\n}\n\n/* 垂直布局 */\n.form-vertical .form-item {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-vertical .form-label {\n  margin-bottom: 8px;\n}\n\n/* 水平布局 */\n.form-horizontal .form-item {\n  display: flex;\n  align-items: center;\n}\n\n/* 栅格布局 */\n.form-row {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -8px;\n}\n\n.form-item[class*=\"col-\"] {\n  padding: 0 8px;\n}\n\n/* 24栅格系统 */\n.col-24 { width: 100%; }\n.col-12 { width: 50%; }\n.col-8 { width: 33.33%; }\n.col-6 { width: 25%; }\n\n```\n\n#### **数据绑定**\n- 支持双向数据绑定，表单字段的值与状态同步。\n- 提供 `value` 和 `onChange` 接口，方便外部控制表单数据。\n\n#### **表单提交**\n- 提供 `onSubmit` 事件，处理表单提交逻辑。\n- 支持阻止默认提交行为（如 `event.preventDefault()`）。\n\n#### **表单重置**\n- 提供 `onReset` 事件，处理表单重置逻辑。\n- 支持将表单数据重置为初始值。\n\n---\n\n### **2. 高级功能**\n#### **表单验证**\n- **内置验证规则**：提供常见的验证规则（如必填、邮箱、手机号等）。\n- **自定义验证**：支持自定义验证函数。\n- **实时验证**：在用户输入时实时验证字段。\n- **异步验证**：支持异步验证（如校验用户名是否已存在）。\n\n> 表单如何感知到子表单项的验证状态: 表单项自验证的情况下，通信表单项的验证结果， 校验是否有错误状态存在的表单项动态改变 submit 按钮\n\n\n#### **表单状态管理**\n- **错误状态**：显示字段的错误信息和样式。\n- **禁用状态**：支持禁用整个表单或单个字段。\n- **加载状态**：在表单提交时显示加载状态。\n\n#### **动态表单**\n- 支持动态添加、删除表单字段。\n- 支持根据条件显示或隐藏字段。\n\n#### **表单联动**\n- 支持字段之间的联动（如选择省份后动态加载城市列表）。\n\n#### **表单数据管理**\n- 提供 `getValues`、`setValues` 等方法，方便外部获取或设置表单数据。\n- 支持表单数据的持久化（如保存草稿）。\n\n---\n\n### **3. 实现细节**\n#### **组件结构**\n- **Form**：表单容器，管理表单状态和提交逻辑。\n- **FormItem**：表单字段容器，管理字段的布局、验证和错误信息。\n- **Input、Select、Checkbox 等**：具体的表单控件。\n\n#### **状态管理**\n- 使用 React 的 `useState` 或 `useReducer` 管理表单状态。\n- 使用 Context API 或状态管理库（如 Redux、MobX）共享表单状态。\n\n#### **验证逻辑**\n- 使用第三方验证库（如 Yup、Zod）或自定义验证逻辑。\n- 在 `FormItem` 中处理字段的验证逻辑和错误提示。\n\n#### **性能优化**\n- 使用 `React.memo` 或 `useMemo` 优化表单控件的渲染性能。\n- 避免在每次输入时重新渲染整个表单。\n\n---\n\n### **6. 总结**\n| **功能**         | **实现方式**                                                                 |\n|------------------|------------------------------------------------------------------------------|\n| **表单布局**     | 使用 `Form` 和 `FormItem` 组件管理布局。                                     |\n| **数据绑定**     | 使用 `value` 和 `onChange` 实现双向绑定。                                    |\n| **表单提交**     | 提供 `onSubmit` 事件处理提交逻辑。                                            |\n| **表单验证**     | 在 `FormItem` 中处理验证逻辑和错误提示。                                      |\n| **动态表单**     | 支持动态添加、删除字段。                                                     |\n| **表单联动**     | 在 `Form` 中管理字段之间的联动逻辑。                                          |\n\n\n\n### vue 组件通信\n\nVue 组件之间有多种通信方式，以下是常见的几种：\n\n#### 1. Props / Emit\n```js\n// 父组件\n<template>\n  <child-component \n    :message=\"message\" \n    @update=\"handleUpdate\"\n  />\n</template>\n\n// 子组件\n<script>\nexport default {\n  props: ['message'],\n  methods: {\n    sendToParent() {\n      this.$emit('update', 'new value')\n    }\n  }\n}\n<\/script>\n```\n\n#### 2. Vuex 状态管理\n```js\n// store.js\nexport default new Vuex.Store({\n  state: {\n    count: 0\n  },\n  mutations: {\n    increment(state) {\n      state.count++\n    }\n  }\n})\n\n// 组件中使用\nthis.$store.commit('increment')\nthis.$store.state.count\n```\n\n#### 3. provide / inject\n```js\n// 父组件\nexport default {\n  provide() {\n    return {\n      theme: 'dark'\n    }\n  }\n}\n\n// 子组件或后代组件\nexport default {\n  inject: ['theme']\n}\n```\n\n#### 4. EventBus\n```js\n// 创建事件总线\nconst EventBus = new Vue()\n\n// 组件A发送事件\nEventBus.$emit('custom-event', data)\n\n// 组件B接收事件\nEventBus.$on('custom-event', data => {\n  console.log(data)\n})\n```\n\n#### 5. $refs / $parent / $children\n```js\n// 父组件\n<template>\n  <child-component ref=\"childRef\"/>\n</template>\n\n<script>\nexport default {\n  mounted() {\n    this.$refs.childRef.childMethod()\n  }\n}\n<\/script>\n\n// 子组件访问父组件\nthis.$parent.parentMethod()\n\n```\n\n这部分内容介绍了 Vue 中最常用的几种组件通信方式：\nProps/Emit - 父子组件最基本的通信方式\nVuex - 全局状态管理\nprovide/inject - 跨层级组件通信\nEventBus - 任意组件间的事件通信\n$refs/$parent/$children - 直接访问组件实例\n每种方式都有其适用场景，建议根据实际需求选择合适的通信方式。\n\n\n\n\n\n### 变量作用域怎么判断\n\n在 JavaScript 中，变量的作用域决定了变量的可访问范围。理解变量作用域是编写高质量代码的关键。以下是判断变量作用域的详细方法：\n\n---\n\n### **1. 全局作用域**\n全局作用域中的变量可以在代码的任何地方访问。\n\n#### **判断方法**\n- 变量在函数或代码块外部声明。\n- 使用 `var`、`let` 或 `const` 声明的变量都可以具有全局作用域。\n\n#### **示例**\n```javascript\nvar globalVar = 'I am global';\nlet globalLet = 'I am also global';\nconst globalConst = 'Me too';\n\nfunction checkScope() {\n  console.log(globalVar); // 'I am global'\n  console.log(globalLet); // 'I am also global'\n  console.log(globalConst); // 'Me too'\n}\n\ncheckScope();\n```\n\n---\n\n### **2. 函数作用域**\n函数作用域中的变量只能在函数内部访问。\n\n#### **判断方法**\n- 变量在函数内部声明。\n- 使用 `var` 声明的变量具有函数作用域。\n\n#### **示例**\n```javascript\nfunction checkScope() {\n  var functionVar = 'I am in function scope';\n  console.log(functionVar); // 'I am in function scope'\n}\n\ncheckScope();\nconsole.log(functionVar); // ReferenceError: functionVar is not defined\n```\n\n---\n\n### **3. 块级作用域**\n块级作用域中的变量只能在代码块（如 `{}`）内部访问。\n\n#### **判断方法**\n- 变量在代码块内部声明。\n- 使用 `let` 或 `const` 声明的变量具有块级作用域。\n\n#### **示例**\n```javascript\nif (true) {\n  let blockLet = 'I am in block scope';\n  const blockConst = 'Me too';\n  console.log(blockLet); // 'I am in block scope'\n  console.log(blockConst); // 'Me too'\n}\n\nconsole.log(blockLet); // ReferenceError: blockLet is not defined\nconsole.log(blockConst); // ReferenceError: blockConst is not defined\n```\n\n---\n\n### **4. 词法作用域（静态作用域）**\n词法作用域是指变量的作用域在代码编写时就已经确定，而不是在运行时确定。\n\n#### **判断方法**\n- 函数的作用域由函数定义的位置决定，而不是调用的位置。\n\n#### **示例**\n```javascript\nlet outerVar = 'I am outer';\n\nfunction outer() {\n  let innerVar = 'I am inner';\n\n  function inner() {\n    console.log(outerVar); // 'I am outer'\n    console.log(innerVar); // 'I am inner'\n  }\n\n  inner();\n}\n\nouter();\n```\n\n---\n\n### **5. 作用域链**\n\n作用域链是指 JavaScript 引擎在查找变量时，会从当前作用域开始，逐级向上查找，直到全局作用域。\n\n#### **判断方法**\n- 如果在当前作用域找不到变量，JavaScript 引擎会沿着作用域链向上查找。\n\n#### **示例**\n```javascript\nlet globalVar = 'I am global';\n\nfunction outer() {\n  let outerVar = 'I am outer';\n\n  function inner() {\n    let innerVar = 'I am inner';\n    console.log(globalVar); // 'I am global'\n    console.log(outerVar); // 'I am outer'\n    console.log(innerVar); // 'I am inner'\n  }\n}\n```\n\n---\n\n### **6. 闭包**\n闭包是指函数可以访问其词法作用域中的变量，即使函数在其词法作用域之外执行。\n\n#### **判断方法**\n- 函数内部定义了另一个函数，并且内部函数引用了外部函数的变量。\n\n#### **示例**\n```javascript\nfunction outer() {\n  let outerVar = 'I am outer';\n\n  function inner() {\n    console.log(outerVar); // 'I am outer'\n  }\n\n  return inner;\n}\n\nconst innerFunc = outer();\ninnerFunc();\n```\n\n---\n\n### **7. 变量提升**\n变量提升是指变量声明会被提升到作用域的顶部，但赋值不会被提升。\n\n#### **判断方法**\n- 使用 `var` 声明的变量会被提升到函数作用域的顶部。\n- 使用 `let` 和 `const` 声明的变量不会被提升，但会进入暂时性死区（TDZ）。\n\n#### **示例**\n```javascript\nconsole.log(hoistedVar); // undefined\nvar hoistedVar = 'I am hoisted';\n\nconsole.log(notHoistedLet); // ReferenceError: Cannot access 'notHoistedLet' before initialization\nlet notHoistedLet = 'I am not hoisted';\n```\n\n---\n\n### **总结**\n| **作用域类型**      | **判断方法**                                                                 |\n|---------------------|------------------------------------------------------------------------------|\n| **全局作用域**      | 变量在函数或代码块外部声明。                                                 |\n| **函数作用域**      | 变量在函数内部声明，使用 `var`。                                              |\n| **块级作用域**      | 变量在代码块内部声明，使用 `let` 或 `const`。                                 |\n| **词法作用域**      | 函数的作用域由定义位置决定。                                                 |\n| **作用域链**        | JavaScript 引擎沿着作用域链查找变量。                                         |\n| **闭包**            | 内部函数引用外部函数的变量。                                                 |\n| **变量提升**        | `var` 声明的变量会被提升，`let` 和 `const` 声明的变量不会。                   |\n\n### async 实现原理\n\n`async` 函数是 JavaScript 语言层面的特性，它是由 JavaScript 引擎（如 V8、SpiderMonkey 等）原生实现的，而不是通过 JavaScript 代码实现的。因此，`async` 函数的源码实际上是引擎内部的 C++ 或汇编代码，而不是 JavaScript 代码。\n\n不过，我们可以通过理解 `async` 函数的行为和底层原理，来模拟它的实现。`async` 函数本质上是基于 `Promise` 和生成器（`Generator`）的语法糖。以下是 `async` 函数的底层原理和模拟实现：\n\n---\n\n### **1. `async` 函数的底层原理**\n`async` 函数的行为可以分解为以下几个关键点：\n1. **返回 `Promise`**：`async` 函数总是返回一个 `Promise`。如果函数返回值不是 `Promise`，它会被自动包装成一个 `Promise`。\n\n2. **`await` 的作用**：`await` 关键字会暂停函数的执行，直到 `Promise` 完成。如果 `Promise` 被 `resolve`，`await` 返回解析值；如果 `Promise` 被 `reject`，`await` 会抛出错误。\n\n3. **错误处理**：`async` 函数中的错误会被捕获并传递给返回的 `Promise` 的 `reject`。\n\n---\n\n### **2. 使用生成器模拟 `async` 函数**\n\n`async` 函数的行为可以用生成器（`Generator`）和 `Promise` 来模拟。以下是一个简单的实现：\n\n```javascript\n// 模拟 async 函数\nfunction asyncGenerator(generatorFunc) {\n  return function (...args) {\n    const generator = generatorFunc(...args);\n\n    // 递归处理生成器的 next 方法\n    function handle(result) {\n      if (result.done) {\n        return Promise.resolve(result.value);\n      }\n\n      return Promise.resolve(result.value)\n        .then((res) => handle(generator.next(res)))\n        .catch((err) => handle(generator.throw(err)));\n    }\n\n    try {\n      return handle(generator.next());\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n}\n\n// 示例：模拟 async 函数\nconst myAsyncFunction = asyncGenerator(function* () {\n  try {\n    const result1 = yield fetchData1();\n    console.log(result1); // 'Data 1 fetched!'\n    const result2 = yield fetchData2();\n    console.log(result2); // 'Data 2 fetched!'\n  } catch (error) {\n    console.error(error);\n  }\n});\n\n```\n\n---\n\n### **3. 解释模拟实现**\n- **`asyncGenerator` 函数**：接受一个生成器函数作为参数，返回一个新的函数。这个新函数会返回一个 `Promise`，并处理生成器的 `next` 方法。\n\n- **`handle` 函数**：递归处理生成器的 `next` 方法。如果生成器返回的 `Promise` 完成，继续调用 `next`；如果 `Promise` 被 `reject`，调用 `generator.throw` 抛出错误。\n\n- **生成器函数**：使用 `yield` 暂停执行，并等待 `Promise` 完成。\n\n---\n\n### **4. 原生 `async` 函数的优势**\n虽然我们可以用生成器模拟 `async` 函数，但原生的 `async` 函数有以下优势：\n- **语法更简洁**：`async` 和 `await` 的语法比生成器更直观。\n- **性能更好**：原生实现由 JavaScript 引擎优化，性能更高。\n- **错误处理更简单**：`async` 函数内置了 `try...catch` 的错误处理机制。\n---\n\n### **5. 总结**\n`async` 函数是 JavaScript 引擎原生实现的特性，底层基于 `Promise` 和生成器。虽然我们可以用生成器模拟它的行为，但原生 `async` 函\n\n\n### fiber 架构\n\nFiber 架构是 React 16 引入的一种新的渲染引擎，它的核心目标是提高 React 应用的性能和响应能力，尤其是在处理大型、复杂的应用时。以下是 Fiber 架构的详细解释：\n\n**1. Fiber 架构的背景和动机**\n\n在 React 16 之前，React 使用的是同步的递归渲染方式。这种方式的缺点是：\n\n* **阻塞主线程：** 当组件树很大或更新很频繁时，渲染过程可能会长时间占用主线程，导致浏览器无法响应用户交互，出现卡顿现象。\n* **无法中断：** 一旦渲染开始，就必须完成，无法中断。这使得 React 难以处理高优先级的任务，如用户输入。\n\n为了解决这些问题，React 团队引入了 Fiber 架构。\n\n**2. Fiber 架构的核心概念**\n\n* **Fiber 节点：** Fiber 架构的核心是 Fiber 节点，它是一个 JavaScript 对象，代表一个 React 组件或 DOM 元素。每个 Fiber 节点都包含以下信息：\n    * 组件的类型、props 和 state\n    * 指向其子节点、兄弟节点和父节点的指针\n    * 需要执行的工作（如更新 DOM）\n* **工作循环（Work Loop）：** Fiber 架构使用工作循环来遍历 Fiber 树，并执行需要执行的工作。工作循环可以中断和恢复，允许 React 在渲染过程中响应高优先级的任务。\n* **优先级：** Fiber 架构引入了优先级的概念，允许 React 根据任务的重要性来调度任务。例如，用户输入事件的优先级高于后台数据更新。\n* **双缓冲：** Fiber 架构使用双缓冲技术来提高渲染性能。它维护两棵 Fiber 树：当前树（current tree）和工作树（work-in-progress tree）。工作树用于构建新的 UI，而当前树用于显示当前的 UI。一旦工作树构建完成，React 会将它切换为当前树。\n\n**3. Fiber 架构的工作原理**\n\nFiber 架构的渲染过程分为两个阶段：\n\n* **渲染阶段（Render Phase）：** 在这个阶段，React 会遍历 Fiber 树，并构建工作树。这个阶段的工作是可以中断的。\n* **提交阶段（Commit Phase）：** 在这个阶段，React 会将工作树的更改应用到 DOM。这个阶段的工作是不可中断的。\n\n**4. Fiber 架构的优势**\n\n* **提高性能：** Fiber 架构允许 React 在渲染过程中中断和恢复，从而避免了长时间阻塞主线程。\n* **提高响应能力：** Fiber 架构允许 React 优先处理高优先级的任务，如用户输入事件，从而提高了应用的响应能力。\n* **更好的用户体验：** 通过提高性能和响应能力，Fiber 架构可以提供更流畅、更愉悦的用户体验。\n\n**5. 总结**\nFiber 架构是 React 的一项重大改进，它通过引入 Fiber 节点、工作循环、优先级和双缓冲等概念，提高了 React 应用的性能和响应能力。虽然Fiber架构的实现非常复杂，但是它为React带来了更加强大的渲染能力，能够支持更加复杂，更大规模的应用程序。\n\n\n\n\n### babel 转换原理\nBabel 是一个广泛使用的 JavaScript 编译器，它主要用于将 ECMAScript 2015+ 代码转换为向后兼容的 JavaScript 版本，以便能够在旧版本浏览器或环境中运行。以下是 Babel 转换原理的详细解释：\n\n**1. 基本概念**\n\n* **源代码（Source Code）：** 这是您编写的原始 JavaScript 代码，可能包含新的 ECMAScript 特性。\n* **目标代码（Target Code）：** 这是 Babel 生成的转换后的 JavaScript 代码，它与旧版本浏览器或环境兼容。\n* **抽象语法树（AST）：** AST 是源代码的树状表示，它捕捉了代码的结构和含义。\n\n**2. Babel 的工作流程**\n\nBabel 的转换过程主要包括以下三个阶段：\n\n* **解析（Parsing）：**\n    * 在这个阶段，Babel 将源代码解析为 AST。\n    * 解析过程分为两个子阶段：\n        * 词法分析（Lexical Analysis）：将源代码分解为 token（标记）流。\n        * 语法分析（Syntactic Analysis）：根据语法规则，将 token 流转换为 AST。\n* **转换（Transformation）：**\n    * 在这个阶段，Babel 遍历 AST，并应用各种转换插件（plugins）来修改 AST。\n    * 转换插件可以添加、删除或修改 AST 节点，从而实现代码的转换。\n    * 例如，一个插件可以将箭头函数转换为传统的函数表达式。\n* **生成（Generation）：**\n    * 在这个阶段，Babel 将修改后的 AST 转换回 JavaScript 代码。\n    * 生成过程将 AST 节点转换为相应的 JavaScript 语法，并生成目标代码。\n\n**3. 核心组成部分**\n\n* **@babel/core：** Babel 的核心库，提供了 Babel 的主要功能，包括解析、转换和生成代码。\n* **@babel/parser：** Babel 的解析器，用于将 JavaScript 代码解析为 AST。\n* **@babel/traverse：** Babel 的遍历器，用于遍历和修改 AST。\n* **@babel/generator：** Babel 的生成器，用于将 AST 转换回 JavaScript 代码。\n* **@babel/plugin-\\*：** Babel 的插件，用于实现各种代码转换功能。\n* **@babel/preset-\\*：** Babel 的预设，是一组插件的集合，用于实现特定的代码转换目标。\n\n**4. 转换示例**\n\n例如，考虑以下使用箭头函数的 ES6 代码：\n\n```javascript\nconst add = (a, b) => a + b;\n```\n\nBabel 可以将其转换为以下 ES5 代码：\n\n```javascript\nvar add = function add(a, b) {\n  return a + b;\n};\n```\n\n在这个例子中，Babel 使用一个插件将箭头函数转换为传统的函数表达式。\n\n**5. 总结**\n\nBabel 通过将 JavaScript 代码解析为 AST，然后应用转换插件来修改 AST，最后将修改后的 AST 生成为目标代码，从而实现了代码的转换。这种灵活的架构使得 Babel 能够支持各种代码转换需求，并成为现代 JavaScript 开发中不可或缺的工具。\n\n### 基于事件循环的 JavaScript 环境中，DOM 更新和渲染的时机\n\n在基于事件循环的 JavaScript 环境中，DOM 更新和渲染的时机涉及微任务队列和宏任务队列，以及浏览器的渲染机制。以下是详细解释：\n\n**1. 事件循环与任务队列：**\n\n* **宏任务（Macro-task）：**\n    * 包括 script（整体代码）、setTimeout、setInterval、I/O 操作等。\n    * 每次事件循环都会从宏任务队列中取出一个任务执行。\n* **微任务（Micro-task）：**\n    * 包括 Promise.then、MutationObserver、process.nextTick（Node.js）等。\n    * 在每个宏任务执行完毕后，会清空微任务队列。\n\n**2. DOM 更新的时机：**\n\n* DOM 的修改是同步的：\n    * 当 JavaScript 代码执行 DOM 操作时，DOM 结构会立即发生变化。\n* **DOM 渲染的时机：**\n    * 浏览器不会立即将 DOM 的变化反映到屏幕上，而是会等待一个合适的时机。\n    * 通常情况下，浏览器会在以下时机进行 DOM 渲染：\n        * 在当前宏任务执行完毕，并且微任务队列清空之后。\n        * 在浏览器准备进行下一次屏幕刷新之前。\n\n**3. 详细过程：**\n\n1.  **JavaScript 代码执行：**\n    * 当 JavaScript 代码执行 DOM 操作时，DOM 结构会立即更新。\n2.  **微任务队列：**\n    * 在当前宏任务执行过程中，如果遇到微任务，会将它们添加到微任务队列中。\n3.  **微任务执行：**\n    * 当当前宏任务执行完毕后，事件循环会检查微任务队列。\n    * 如果微任务队列不为空，会依次执行队列中的所有微任务。\n4.  **DOM 渲染：**\n    * 当微任务队列清空后，浏览器会根据 DOM 的变化，进行布局（layout）和绘制（paint），将更新后的内容渲染到屏幕上。\n5.  **下一次事件循环：**\n    * 浏览器准备进行下一次屏幕刷新，或者有新的宏任务需要执行，事件循环会继续进行。\n\n**4. 总结：**\n\n* DOM 的修改是同步的，即时发生。\n* DOM的渲染是异步的，在微任务队列清空后，宏任务即将结束时，浏览器会统一进行渲染。\n* 因此，DOM 更新发生在同步代码中，而DOM渲染发生在微任务结束之后，下一个宏任务开始之前。\n\n**5. 补充说明：**\n\n* 有些情况下，浏览器可能会强制进行同步布局，例如，当 JavaScript 代码需要立即获取某个 DOM 元素的布局信息时。\n* vue等框架，为了性能优化，会对DOM的更新进行批量处理，会把要发生的DOM更新放到微任务队列中，在微任务中统一更新DOM。\n\n\n### css 的优化\n\nCSS 优化对于提升网站性能和用户体验至关重要。以下是一些常见的 CSS 优化策略：\n\n**1. 代码组织与结构优化**\n\n* **使用外部样式表：**\n    * 将 CSS 代码放在外部文件中，可以利用浏览器缓存，减少重复下载。\n* **精简 CSS 代码：**\n    * 删除不必要的空格、换行和注释。\n    * 使用 CSS 压缩工具（如 CSSNano）自动压缩代码。\n* **合理组织 CSS 结构：**\n    * 使用模块化 CSS\n    * 避免过度嵌套，保持选择器的简洁。\n\n**2. 选择器优化**\n\n* **避免使用通用选择器（\\*）：**\n    * 通用选择器会匹配所有元素，影响性能。\n* **减少选择器的层级：**\n    * 选择器层级越深，匹配效率越低。\n    * 尽量使用类选择器或 ID 选择器。\n* **避免使用低效的选择器：**\n    * 如属性选择器、子选择器等，在某些情况下会影响性能。\n* **使用正确的选择器：**\n    * ID选择器：#myDiv\n    * 类选择器：.myclass\n    * 元素选择器：div\n    * 属性选择器：[type=\"text\"]\n\n**3. 渲染优化**\n\n* **避免使用昂贵的 CSS 属性：**\n    * 如 `box-shadow`、`border-radius`、`filter` 等，会增加渲染成本。\n    * 尽量使用性能更好的替代方案。\n* **利用硬件加速：**\n    * 使用 `transform: translateZ(0)` 或 `will-change` 属性，将元素提升到独立的渲染层，利用 GPU 加速。\n* **减少重绘和重排：**\n    * 尽量批量修改样式，避免频繁触发重绘和重排。\n    * 使用 `requestAnimationFrame` 方法，在浏览器重绘之前执行动画。\n    * 避免使用table布局。\n\n**4. 资源优化**\n\n* **使用 CSS Sprites：**\n    * 将多个小图标合并成一张图片，减少 HTTP 请求。\n* **使用字体图标：**\n    * 使用字体图标（如 Font Awesome）代替图片图标，减少文件大小。\n* **优化图片：**\n    * 对css中用到的背景图片进行压缩，使用webp等更优的图片格式。\n* **按需加载 CSS：**\n    * 使用媒体查询，将css分为多个文件，在需要的页面引入需要的css。\n\n**5. 性能工具**\n\n* **使用浏览器开发者工具：**\n    * 利用 Chrome DevTools 等工具，分析 CSS 性能瓶颈。\n* **使用 Lighthouse：**\n    * Lighthouse 是谷歌推出的一个开源工具，用于改进网络应用的质量。 您可以将其作为一个 Chrome 扩展程序运行，或从命令行运行。 当您为 Lighthouse 提供一个网址时，它将针对此页面运行一连串的审计，然后生成一个有关该页面性能的报告。 在这份报告中，你可以清晰的看到css的性能问题。\n\n**总结**\n\nCSS 优化是一个综合性的过程，需要从代码组织、选择器、渲染和资源等多个方面进行考虑。通过合理的优化策略，可以显著提升网站的性能和用户体验。\n"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQyLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoibUlBQUEsMjRpQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0X3d5ei8uLi8uLi9ibG9ncy9tYXJrZG93bi9zaGFyZS1jcmVhdG9yLm1kIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiIyMjIOS6jOWPieagkeWIpOaWrSByb290IOagkeaYr+WQpuWMheWQq+ivpeWtkOagkVxcblxcbmBgYGpzXFxuXFxuXFxuZnVuY3Rpb24gaXNTYW1lVHJlZShyb290LCBzdWJSb290KSB7XFxuICAgIGlmICghcm9vdCAmJiAhc3ViUm9vdCkgcmV0dXJuIHRydWU7XFxuICAgIGlmICghcm9vdCB8fCAhc3ViUm9vdCkgcmV0dXJuIGZhbHNlO1xcbiAgICBpZiAocm9vdC52YWwgIT09IHN1YlJvb3QudmFsKSByZXR1cm4gZmFsc2U7XFxuICAgIHJldHVybiBpc1NhbWVUcmVlKHJvb3QubGVmdCwgc3ViUm9vdC5sZWZ0KSAmJiBpc1NhbWVUcmVlKHJvb3QucmlnaHQsIHN1YlJvb3QucmlnaHQpO1xcbn1cXG5cXG5cXG5mdW5jdGlvbiBpc0luY2x1ZGVTdWJUcmVlKHJvb3QsIHN1YlJvb3QpIHtcXG4gICAgaWYgKCFyb290KSByZXR1cm4gZmFsc2U7XFxuICAgIHJldHVybiBpc1NhbWVUcmVlKHJvb3QsIHN1YlJvb3QpIHx8IGlzSW5jbHVkZVN1YlRyZWUocm9vdC5sZWZ0LCBzdWJSb290KSB8fCBpc0luY2x1ZGVTdWJUcmVlKHJvb3QucmlnaHQsIHN1YlJvb3QpO1xcbn1cXG5cXG5gYGBcXG5cXG4jIyMgZGVib3VuY2Ug5ZKMIHRocm90dGxlIOWunueOsCDlkowgbG9jayBjbGFzcyDplIHnmoTlrp7njrBcXG5cXG5gYGBqc1xcbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQpIHtcXG4gIGxldCB0aW1lb3V0O1xcbiAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XFxuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTsgLy8g5riF6Zmk5LmL5YmN55qE5a6a5pe25ZmoXFxuICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcXG4gICAgICBmdW5jLmFwcGx5KHRoaXMsIGFyZ3MpOyAvLyDmiafooYzlh73mlbBcXG4gICAgfSwgd2FpdCk7XFxuICB9O1xcbn1cXG5cXG5mdW5jdGlvbiB0aHJvdHRsZShmdW5jLCB3YWl0KSB7XFxuICBsZXQgbGFzdFRpbWUgPSAwO1xcbiAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XFxuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XFxuICAgIGlmIChub3cgLSBsYXN0VGltZSA+PSB3YWl0KSB7XFxuICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmdzKTsgLy8g5omn6KGM5Ye95pWwXFxuICAgICAgbGFzdFRpbWUgPSBub3c7IC8vIOabtOaWsOS4iuasoeaJp+ihjOaXtumXtFxcbiAgICB9XFxuICB9O1xcbn1cXG5cXG5cXG5jbGFzcyBMb2NrIHtcXG4gICAgY29uc3RydWN0b3IoKSB7XFxuICAgICAgICB0aGlzLmlzTG9ja2VkID0gZmFsc2U7IC8vIOmUgeeahOeKtuaAgVxcbiAgICB9XFxuXFxuICAgIGFjcXVpcmUoKSB7XFxuICAgICAgICBpZiAodGhpcy5pc0xvY2tlZCkge1xcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDlpoLmnpzplIHlt7LooqvljaDnlKjvvIzov5Tlm54gZmFsc2VcXG4gICAgICAgIH1cXG4gICAgICAgIHRoaXMuaXNMb2NrZWQgPSB0cnVlOyAvLyDljaDnlKjplIFcXG4gICAgICAgIHJldHVybiB0cnVlO1xcbiAgICB9XFxuXFxuICAgIHJlbGVhc2UoKSB7XFxuICAgICAgICB0aGlzLmlzTG9ja2VkID0gZmFsc2U7IC8vIOmHiuaUvumUgVxcbiAgICB9XFxufVxcblxcbmNvbnN0IGxvY2sgPSBuZXcgTG9jaygpO1xcblxcbmZ1bmN0aW9uIHN1Ym1pdEZvcm0oKSB7XFxuICBpZiAobG9jay5hY3F1aXJlKCkpIHtcXG4gICAgY29uc29sZS5sb2coJ0Zvcm0gc3VibWl0dGVkJyk7XFxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgIGxvY2sucmVsZWFzZSgpOyAvLyDmqKHmi5/lvILmraXmk43kvZzlrozmiJDlkI7ph4rmlL7plIFcXG4gICAgfSwgMTAwMCk7XFxuICB9IGVsc2Uge1xcbiAgICBjb25zb2xlLmxvZygnRm9ybSBpcyBhbHJlYWR5IHN1Ym1pdHRpbmcuLi4nKTtcXG4gIH1cXG59XFxuXFxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1Ym1pdCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3VibWl0Rm9ybSk7XFxuXFxuYGBgXFxuXFxuXFxuXFxuXFxuIyMjIGZvcm3nmoTnu4Tku7borr7orqHkuI7lrp7njrBcXG5cXG7orr7orqHlkozlrp7njrDkuIDkuKogYEZvcm1gIOe7hOS7tuaYr+e7hOS7tuW6k+W8gOWPkeS4reeahOS4gOS4qumHjeimgeS4lOWkjeadgueahOS7u+WKoeOAgmBGb3JtYCDnu4Tku7bkuI3ku4XpnIDopoHlpITnkIbooajljZXnmoTluIPlsYDlkozmoLflvI/vvIzov5jpnIDopoHnrqHnkIbooajljZXmlbDmja7jgIHpqozor4HjgIHmj5DkuqTnrYnpgLvovpHjgILku6XkuIvmmK/lhbPkuo4gYEZvcm1gIOe7hOS7tumavuW6puiuvuiuoeeahOivpue7huaMh+WNl++8mlxcblxcbi0tLVxcblxcbiMjIyAqKjEuIOWfuuehgOWKn+iDvSoqXFxuIyMjIyAqKuihqOWNleW4g+WxgCoqXFxuLSDmlK/mjIHlpJrnp43luIPlsYDmlrnlvI/vvIjlpoLmsLTlubPluIPlsYDjgIHlnoLnm7TluIPlsYDjgIHmoIXmoLzluIPlsYDvvInjgIJcXG4tIOaPkOS+m+ihqOWNleagh+etvuOAgei+k+WFpeahhuOAgeaMiemSruetieWfuuehgOe7hOS7tueahOmbhuaIkOOAglxcblxcbuW4g+WxgOiuvuiuoe+8mlxcbmBgYGNzc1xcbi5mb3JtIHtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uZm9ybS1pdGVtIHtcXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XFxufVxcblxcbi8qIOWeguebtOW4g+WxgCAqL1xcbi5mb3JtLXZlcnRpY2FsIC5mb3JtLWl0ZW0ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi5mb3JtLXZlcnRpY2FsIC5mb3JtLWxhYmVsIHtcXG4gIG1hcmdpbi1ib3R0b206IDhweDtcXG59XFxuXFxuLyog5rC05bmz5biD5bGAICovXFxuLmZvcm0taG9yaXpvbnRhbCAuZm9ybS1pdGVtIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4vKiDmoIXmoLzluIPlsYAgKi9cXG4uZm9ybS1yb3cge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG4gIG1hcmdpbjogMCAtOHB4O1xcbn1cXG5cXG4uZm9ybS1pdGVtW2NsYXNzKj1cXFwiY29sLVxcXCJdIHtcXG4gIHBhZGRpbmc6IDAgOHB4O1xcbn1cXG5cXG4vKiAyNOagheagvOezu+e7nyAqL1xcbi5jb2wtMjQgeyB3aWR0aDogMTAwJTsgfVxcbi5jb2wtMTIgeyB3aWR0aDogNTAlOyB9XFxuLmNvbC04IHsgd2lkdGg6IDMzLjMzJTsgfVxcbi5jb2wtNiB7IHdpZHRoOiAyNSU7IH1cXG5cXG5gYGBcXG5cXG4jIyMjICoq5pWw5o2u57uR5a6aKipcXG4tIOaUr+aMgeWPjOWQkeaVsOaNrue7keWumu+8jOihqOWNleWtl+auteeahOWAvOS4jueKtuaAgeWQjOatpeOAglxcbi0g5o+Q5L6bIGB2YWx1ZWAg5ZKMIGBvbkNoYW5nZWAg5o6l5Y+j77yM5pa55L6/5aSW6YOo5o6n5Yi26KGo5Y2V5pWw5o2u44CCXFxuXFxuIyMjIyAqKuihqOWNleaPkOS6pCoqXFxuLSDmj5DkvpsgYG9uU3VibWl0YCDkuovku7bvvIzlpITnkIbooajljZXmj5DkuqTpgLvovpHjgIJcXG4tIOaUr+aMgemYu+atoum7mOiupOaPkOS6pOihjOS4uu+8iOWmgiBgZXZlbnQucHJldmVudERlZmF1bHQoKWDvvInjgIJcXG5cXG4jIyMjICoq6KGo5Y2V6YeN572uKipcXG4tIOaPkOS+myBgb25SZXNldGAg5LqL5Lu277yM5aSE55CG6KGo5Y2V6YeN572u6YC76L6R44CCXFxuLSDmlK/mjIHlsIbooajljZXmlbDmja7ph43nva7kuLrliJ3lp4vlgLzjgIJcXG5cXG4tLS1cXG5cXG4jIyMgKioyLiDpq5jnuqflip/og70qKlxcbiMjIyMgKirooajljZXpqozor4EqKlxcbi0gKirlhoXnva7pqozor4Hop4TliJkqKu+8muaPkOS+m+W4uOingeeahOmqjOivgeinhOWIme+8iOWmguW/heWhq+OAgemCrueuseOAgeaJi+acuuWPt+etie+8ieOAglxcbi0gKiroh6rlrprkuYnpqozor4EqKu+8muaUr+aMgeiHquWumuS5iemqjOivgeWHveaVsOOAglxcbi0gKirlrp7ml7bpqozor4EqKu+8muWcqOeUqOaIt+i+k+WFpeaXtuWunuaXtumqjOivgeWtl+auteOAglxcbi0gKirlvILmraXpqozor4EqKu+8muaUr+aMgeW8guatpemqjOivge+8iOWmguagoemqjOeUqOaIt+WQjeaYr+WQpuW3suWtmOWcqO+8ieOAglxcblxcbj4g6KGo5Y2V5aaC5L2V5oSf55+l5Yiw5a2Q6KGo5Y2V6aG555qE6aqM6K+B54q25oCBOiDooajljZXpobnoh6rpqozor4HnmoTmg4XlhrXkuIvvvIzpgJrkv6HooajljZXpobnnmoTpqozor4Hnu5PmnpzvvIwg5qCh6aqM5piv5ZCm5pyJ6ZSZ6K+v54q25oCB5a2Y5Zyo55qE6KGo5Y2V6aG55Yqo5oCB5pS55Y+YIHN1Ym1pdCDmjInpkq5cXG5cXG5cXG4jIyMjICoq6KGo5Y2V54q25oCB566h55CGKipcXG4tICoq6ZSZ6K+v54q25oCBKirvvJrmmL7npLrlrZfmrrXnmoTplJnor6/kv6Hmga/lkozmoLflvI/jgIJcXG4tICoq56aB55So54q25oCBKirvvJrmlK/mjIHnpoHnlKjmlbTkuKrooajljZXmiJbljZXkuKrlrZfmrrXjgIJcXG4tICoq5Yqg6L2954q25oCBKirvvJrlnKjooajljZXmj5DkuqTml7bmmL7npLrliqDovb3nirbmgIHjgIJcXG5cXG4jIyMjICoq5Yqo5oCB6KGo5Y2VKipcXG4tIOaUr+aMgeWKqOaAgea3u+WKoOOAgeWIoOmZpOihqOWNleWtl+auteOAglxcbi0g5pSv5oyB5qC55o2u5p2h5Lu25pi+56S65oiW6ZqQ6JeP5a2X5q6144CCXFxuXFxuIyMjIyAqKuihqOWNleiBlOWKqCoqXFxuLSDmlK/mjIHlrZfmrrXkuYvpl7TnmoTogZTliqjvvIjlpoLpgInmi6nnnIHku73lkI7liqjmgIHliqDovb3ln47luILliJfooajvvInjgIJcXG5cXG4jIyMjICoq6KGo5Y2V5pWw5o2u566h55CGKipcXG4tIOaPkOS+myBgZ2V0VmFsdWVzYOOAgWBzZXRWYWx1ZXNgIOetieaWueazle+8jOaWueS+v+WklumDqOiOt+WPluaIluiuvue9ruihqOWNleaVsOaNruOAglxcbi0g5pSv5oyB6KGo5Y2V5pWw5o2u55qE5oyB5LmF5YyW77yI5aaC5L+d5a2Y6I2J56i/77yJ44CCXFxuXFxuLS0tXFxuXFxuIyMjICoqMy4g5a6e546w57uG6IqCKipcXG4jIyMjICoq57uE5Lu257uT5p6EKipcXG4tICoqRm9ybSoq77ya6KGo5Y2V5a655Zmo77yM566h55CG6KGo5Y2V54q25oCB5ZKM5o+Q5Lqk6YC76L6R44CCXFxuLSAqKkZvcm1JdGVtKirvvJrooajljZXlrZfmrrXlrrnlmajvvIznrqHnkIblrZfmrrXnmoTluIPlsYDjgIHpqozor4HlkozplJnor6/kv6Hmga/jgIJcXG4tICoqSW5wdXTjgIFTZWxlY3TjgIFDaGVja2JveCDnrYkqKu+8muWFt+S9k+eahOihqOWNleaOp+S7tuOAglxcblxcbiMjIyMgKirnirbmgIHnrqHnkIYqKlxcbi0g5L2/55SoIFJlYWN0IOeahCBgdXNlU3RhdGVgIOaIliBgdXNlUmVkdWNlcmAg566h55CG6KGo5Y2V54q25oCB44CCXFxuLSDkvb/nlKggQ29udGV4dCBBUEkg5oiW54q25oCB566h55CG5bqT77yI5aaCIFJlZHV444CBTW9iWO+8ieWFseS6q+ihqOWNleeKtuaAgeOAglxcblxcbiMjIyMgKirpqozor4HpgLvovpEqKlxcbi0g5L2/55So56ys5LiJ5pa56aqM6K+B5bqT77yI5aaCIFl1cOOAgVpvZO+8ieaIluiHquWumuS5iemqjOivgemAu+i+keOAglxcbi0g5ZyoIGBGb3JtSXRlbWAg5Lit5aSE55CG5a2X5q6155qE6aqM6K+B6YC76L6R5ZKM6ZSZ6K+v5o+Q56S644CCXFxuXFxuIyMjIyAqKuaAp+iDveS8mOWMlioqXFxuLSDkvb/nlKggYFJlYWN0Lm1lbW9gIOaIliBgdXNlTWVtb2Ag5LyY5YyW6KGo5Y2V5o6n5Lu255qE5riy5p+T5oCn6IO944CCXFxuLSDpgb/lhY3lnKjmr4/mrKHovpPlhaXml7bph43mlrDmuLLmn5PmlbTkuKrooajljZXjgIJcXG5cXG4tLS1cXG5cXG4jIyMgKio2LiDmgLvnu5MqKlxcbnwgKirlip/og70qKiAgICAgICAgIHwgKirlrp7njrDmlrnlvI8qKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxcbnwtLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxcbnwgKirooajljZXluIPlsYAqKiAgICAgfCDkvb/nlKggYEZvcm1gIOWSjCBgRm9ybUl0ZW1gIOe7hOS7tueuoeeQhuW4g+WxgOOAgiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XFxufCAqKuaVsOaNrue7keWumioqICAgICB8IOS9v+eUqCBgdmFsdWVgIOWSjCBgb25DaGFuZ2VgIOWunueOsOWPjOWQkee7keWumuOAgiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcXG58ICoq6KGo5Y2V5o+Q5LqkKiogICAgIHwg5o+Q5L6bIGBvblN1Ym1pdGAg5LqL5Lu25aSE55CG5o+Q5Lqk6YC76L6R44CCICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XFxufCAqKuihqOWNlemqjOivgSoqICAgICB8IOWcqCBgRm9ybUl0ZW1gIOS4reWkhOeQhumqjOivgemAu+i+keWSjOmUmeivr+aPkOekuuOAgiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxcbnwgKirliqjmgIHooajljZUqKiAgICAgfCDmlK/mjIHliqjmgIHmt7vliqDjgIHliKDpmaTlrZfmrrXjgIIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcXG58ICoq6KGo5Y2V6IGU5YqoKiogICAgIHwg5ZyoIGBGb3JtYCDkuK3nrqHnkIblrZfmrrXkuYvpl7TnmoTogZTliqjpgLvovpHjgIIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XFxuXFxuXFxuXFxuIyMjIHZ1ZSDnu4Tku7bpgJrkv6FcXG5cXG5WdWUg57uE5Lu25LmL6Ze05pyJ5aSa56eN6YCa5L+h5pa55byP77yM5Lul5LiL5piv5bi46KeB55qE5Yeg56eN77yaXFxuXFxuIyMjIyAxLiBQcm9wcyAvIEVtaXRcXG5gYGBqc1xcbi8vIOeItue7hOS7tlxcbjx0ZW1wbGF0ZT5cXG4gIDxjaGlsZC1jb21wb25lbnQgXFxuICAgIDptZXNzYWdlPVxcXCJtZXNzYWdlXFxcIiBcXG4gICAgQHVwZGF0ZT1cXFwiaGFuZGxlVXBkYXRlXFxcIlxcbiAgLz5cXG48L3RlbXBsYXRlPlxcblxcbi8vIOWtkOe7hOS7tlxcbjxzY3JpcHQ+XFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgcHJvcHM6IFsnbWVzc2FnZSddLFxcbiAgbWV0aG9kczoge1xcbiAgICBzZW5kVG9QYXJlbnQoKSB7XFxuICAgICAgdGhpcy4kZW1pdCgndXBkYXRlJywgJ25ldyB2YWx1ZScpXFxuICAgIH1cXG4gIH1cXG59XFxuPC9zY3JpcHQ+XFxuYGBgXFxuXFxuIyMjIyAyLiBWdWV4IOeKtuaAgeeuoeeQhlxcbmBgYGpzXFxuLy8gc3RvcmUuanNcXG5leHBvcnQgZGVmYXVsdCBuZXcgVnVleC5TdG9yZSh7XFxuICBzdGF0ZToge1xcbiAgICBjb3VudDogMFxcbiAgfSxcXG4gIG11dGF0aW9uczoge1xcbiAgICBpbmNyZW1lbnQoc3RhdGUpIHtcXG4gICAgICBzdGF0ZS5jb3VudCsrXFxuICAgIH1cXG4gIH1cXG59KVxcblxcbi8vIOe7hOS7tuS4reS9v+eUqFxcbnRoaXMuJHN0b3JlLmNvbW1pdCgnaW5jcmVtZW50JylcXG50aGlzLiRzdG9yZS5zdGF0ZS5jb3VudFxcbmBgYFxcblxcbiMjIyMgMy4gcHJvdmlkZSAvIGluamVjdFxcbmBgYGpzXFxuLy8g54i257uE5Lu2XFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgcHJvdmlkZSgpIHtcXG4gICAgcmV0dXJuIHtcXG4gICAgICB0aGVtZTogJ2RhcmsnXFxuICAgIH1cXG4gIH1cXG59XFxuXFxuLy8g5a2Q57uE5Lu25oiW5ZCO5Luj57uE5Lu2XFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgaW5qZWN0OiBbJ3RoZW1lJ11cXG59XFxuYGBgXFxuXFxuIyMjIyA0LiBFdmVudEJ1c1xcbmBgYGpzXFxuLy8g5Yib5bu65LqL5Lu25oC757q/XFxuY29uc3QgRXZlbnRCdXMgPSBuZXcgVnVlKClcXG5cXG4vLyDnu4Tku7ZB5Y+R6YCB5LqL5Lu2XFxuRXZlbnRCdXMuJGVtaXQoJ2N1c3RvbS1ldmVudCcsIGRhdGEpXFxuXFxuLy8g57uE5Lu2QuaOpeaUtuS6i+S7tlxcbkV2ZW50QnVzLiRvbignY3VzdG9tLWV2ZW50JywgZGF0YSA9PiB7XFxuICBjb25zb2xlLmxvZyhkYXRhKVxcbn0pXFxuYGBgXFxuXFxuIyMjIyA1LiAkcmVmcyAvICRwYXJlbnQgLyAkY2hpbGRyZW5cXG5gYGBqc1xcbi8vIOeItue7hOS7tlxcbjx0ZW1wbGF0ZT5cXG4gIDxjaGlsZC1jb21wb25lbnQgcmVmPVxcXCJjaGlsZFJlZlxcXCIvPlxcbjwvdGVtcGxhdGU+XFxuXFxuPHNjcmlwdD5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICBtb3VudGVkKCkge1xcbiAgICB0aGlzLiRyZWZzLmNoaWxkUmVmLmNoaWxkTWV0aG9kKClcXG4gIH1cXG59XFxuPC9zY3JpcHQ+XFxuXFxuLy8g5a2Q57uE5Lu26K6/6Zeu54i257uE5Lu2XFxudGhpcy4kcGFyZW50LnBhcmVudE1ldGhvZCgpXFxuXFxuYGBgXFxuXFxu6L+Z6YOo5YiG5YaF5a655LuL57uN5LqGIFZ1ZSDkuK3mnIDluLjnlKjnmoTlh6Dnp43nu4Tku7bpgJrkv6HmlrnlvI/vvJpcXG5Qcm9wcy9FbWl0IC0g54i25a2Q57uE5Lu25pyA5Z+65pys55qE6YCa5L+h5pa55byPXFxuVnVleCAtIOWFqOWxgOeKtuaAgeeuoeeQhlxcbnByb3ZpZGUvaW5qZWN0IC0g6Leo5bGC57qn57uE5Lu26YCa5L+hXFxuRXZlbnRCdXMgLSDku7vmhI/nu4Tku7bpl7TnmoTkuovku7bpgJrkv6FcXG4kcmVmcy8kcGFyZW50LyRjaGlsZHJlbiAtIOebtOaOpeiuv+mXrue7hOS7tuWunuS+i1xcbuavj+enjeaWueW8j+mDveacieWFtumAgueUqOWcuuaZr++8jOW7uuiuruagueaNruWunumZhemcgOaxgumAieaLqeWQiOmAgueahOmAmuS/oeaWueW8j+OAglxcblxcblxcblxcblxcblxcbiMjIyDlj5jph4/kvZznlKjln5/mgI7kuYjliKTmlq1cXG5cXG7lnKggSmF2YVNjcmlwdCDkuK3vvIzlj5jph4/nmoTkvZznlKjln5/lhrPlrprkuoblj5jph4/nmoTlj6/orr/pl67ojIPlm7TjgILnkIbop6Plj5jph4/kvZznlKjln5/mmK/nvJblhpnpq5jotKjph4/ku6PnoIHnmoTlhbPplK7jgILku6XkuIvmmK/liKTmlq3lj5jph4/kvZznlKjln5/nmoTor6bnu4bmlrnms5XvvJpcXG5cXG4tLS1cXG5cXG4jIyMgKioxLiDlhajlsYDkvZznlKjln58qKlxcbuWFqOWxgOS9nOeUqOWfn+S4reeahOWPmOmHj+WPr+S7peWcqOS7o+eggeeahOS7u+S9leWcsOaWueiuv+mXruOAglxcblxcbiMjIyMgKirliKTmlq3mlrnms5UqKlxcbi0g5Y+Y6YeP5Zyo5Ye95pWw5oiW5Luj56CB5Z2X5aSW6YOo5aOw5piO44CCXFxuLSDkvb/nlKggYHZhcmDjgIFgbGV0YCDmiJYgYGNvbnN0YCDlo7DmmI7nmoTlj5jph4/pg73lj6/ku6XlhbfmnInlhajlsYDkvZznlKjln5/jgIJcXG5cXG4jIyMjICoq56S65L6LKipcXG5gYGBqYXZhc2NyaXB0XFxudmFyIGdsb2JhbFZhciA9ICdJIGFtIGdsb2JhbCc7XFxubGV0IGdsb2JhbExldCA9ICdJIGFtIGFsc28gZ2xvYmFsJztcXG5jb25zdCBnbG9iYWxDb25zdCA9ICdNZSB0b28nO1xcblxcbmZ1bmN0aW9uIGNoZWNrU2NvcGUoKSB7XFxuICBjb25zb2xlLmxvZyhnbG9iYWxWYXIpOyAvLyAnSSBhbSBnbG9iYWwnXFxuICBjb25zb2xlLmxvZyhnbG9iYWxMZXQpOyAvLyAnSSBhbSBhbHNvIGdsb2JhbCdcXG4gIGNvbnNvbGUubG9nKGdsb2JhbENvbnN0KTsgLy8gJ01lIHRvbydcXG59XFxuXFxuY2hlY2tTY29wZSgpO1xcbmBgYFxcblxcbi0tLVxcblxcbiMjIyAqKjIuIOWHveaVsOS9nOeUqOWfnyoqXFxu5Ye95pWw5L2c55So5Z+f5Lit55qE5Y+Y6YeP5Y+q6IO95Zyo5Ye95pWw5YaF6YOo6K6/6Zeu44CCXFxuXFxuIyMjIyAqKuWIpOaWreaWueazlSoqXFxuLSDlj5jph4/lnKjlh73mlbDlhoXpg6jlo7DmmI7jgIJcXG4tIOS9v+eUqCBgdmFyYCDlo7DmmI7nmoTlj5jph4/lhbfmnInlh73mlbDkvZznlKjln5/jgIJcXG5cXG4jIyMjICoq56S65L6LKipcXG5gYGBqYXZhc2NyaXB0XFxuZnVuY3Rpb24gY2hlY2tTY29wZSgpIHtcXG4gIHZhciBmdW5jdGlvblZhciA9ICdJIGFtIGluIGZ1bmN0aW9uIHNjb3BlJztcXG4gIGNvbnNvbGUubG9nKGZ1bmN0aW9uVmFyKTsgLy8gJ0kgYW0gaW4gZnVuY3Rpb24gc2NvcGUnXFxufVxcblxcbmNoZWNrU2NvcGUoKTtcXG5jb25zb2xlLmxvZyhmdW5jdGlvblZhcik7IC8vIFJlZmVyZW5jZUVycm9yOiBmdW5jdGlvblZhciBpcyBub3QgZGVmaW5lZFxcbmBgYFxcblxcbi0tLVxcblxcbiMjIyAqKjMuIOWdl+e6p+S9nOeUqOWfnyoqXFxu5Z2X57qn5L2c55So5Z+f5Lit55qE5Y+Y6YeP5Y+q6IO95Zyo5Luj56CB5Z2X77yI5aaCIGB7fWDvvInlhoXpg6jorr/pl67jgIJcXG5cXG4jIyMjICoq5Yik5pat5pa55rOVKipcXG4tIOWPmOmHj+WcqOS7o+eggeWdl+WGhemDqOWjsOaYjuOAglxcbi0g5L2/55SoIGBsZXRgIOaIliBgY29uc3RgIOWjsOaYjueahOWPmOmHj+WFt+acieWdl+e6p+S9nOeUqOWfn+OAglxcblxcbiMjIyMgKirnpLrkvosqKlxcbmBgYGphdmFzY3JpcHRcXG5pZiAodHJ1ZSkge1xcbiAgbGV0IGJsb2NrTGV0ID0gJ0kgYW0gaW4gYmxvY2sgc2NvcGUnO1xcbiAgY29uc3QgYmxvY2tDb25zdCA9ICdNZSB0b28nO1xcbiAgY29uc29sZS5sb2coYmxvY2tMZXQpOyAvLyAnSSBhbSBpbiBibG9jayBzY29wZSdcXG4gIGNvbnNvbGUubG9nKGJsb2NrQ29uc3QpOyAvLyAnTWUgdG9vJ1xcbn1cXG5cXG5jb25zb2xlLmxvZyhibG9ja0xldCk7IC8vIFJlZmVyZW5jZUVycm9yOiBibG9ja0xldCBpcyBub3QgZGVmaW5lZFxcbmNvbnNvbGUubG9nKGJsb2NrQ29uc3QpOyAvLyBSZWZlcmVuY2VFcnJvcjogYmxvY2tDb25zdCBpcyBub3QgZGVmaW5lZFxcbmBgYFxcblxcbi0tLVxcblxcbiMjIyAqKjQuIOivjeazleS9nOeUqOWfn++8iOmdmeaAgeS9nOeUqOWfn++8iSoqXFxu6K+N5rOV5L2c55So5Z+f5piv5oyH5Y+Y6YeP55qE5L2c55So5Z+f5Zyo5Luj56CB57yW5YaZ5pe25bCx5bey57uP56Gu5a6a77yM6ICM5LiN5piv5Zyo6L+Q6KGM5pe256Gu5a6a44CCXFxuXFxuIyMjIyAqKuWIpOaWreaWueazlSoqXFxuLSDlh73mlbDnmoTkvZznlKjln5/nlLHlh73mlbDlrprkuYnnmoTkvY3nva7lhrPlrprvvIzogIzkuI3mmK/osIPnlKjnmoTkvY3nva7jgIJcXG5cXG4jIyMjICoq56S65L6LKipcXG5gYGBqYXZhc2NyaXB0XFxubGV0IG91dGVyVmFyID0gJ0kgYW0gb3V0ZXInO1xcblxcbmZ1bmN0aW9uIG91dGVyKCkge1xcbiAgbGV0IGlubmVyVmFyID0gJ0kgYW0gaW5uZXInO1xcblxcbiAgZnVuY3Rpb24gaW5uZXIoKSB7XFxuICAgIGNvbnNvbGUubG9nKG91dGVyVmFyKTsgLy8gJ0kgYW0gb3V0ZXInXFxuICAgIGNvbnNvbGUubG9nKGlubmVyVmFyKTsgLy8gJ0kgYW0gaW5uZXInXFxuICB9XFxuXFxuICBpbm5lcigpO1xcbn1cXG5cXG5vdXRlcigpO1xcbmBgYFxcblxcbi0tLVxcblxcbiMjIyAqKjUuIOS9nOeUqOWfn+mTvioqXFxuXFxu5L2c55So5Z+f6ZO+5piv5oyHIEphdmFTY3JpcHQg5byV5pOO5Zyo5p+l5om+5Y+Y6YeP5pe277yM5Lya5LuO5b2T5YmN5L2c55So5Z+f5byA5aeL77yM6YCQ57qn5ZCR5LiK5p+l5om+77yM55u05Yiw5YWo5bGA5L2c55So5Z+f44CCXFxuXFxuIyMjIyAqKuWIpOaWreaWueazlSoqXFxuLSDlpoLmnpzlnKjlvZPliY3kvZznlKjln5/mib7kuI3liLDlj5jph4/vvIxKYXZhU2NyaXB0IOW8leaTjuS8muayv+edgOS9nOeUqOWfn+mTvuWQkeS4iuafpeaJvuOAglxcblxcbiMjIyMgKirnpLrkvosqKlxcbmBgYGphdmFzY3JpcHRcXG5sZXQgZ2xvYmFsVmFyID0gJ0kgYW0gZ2xvYmFsJztcXG5cXG5mdW5jdGlvbiBvdXRlcigpIHtcXG4gIGxldCBvdXRlclZhciA9ICdJIGFtIG91dGVyJztcXG5cXG4gIGZ1bmN0aW9uIGlubmVyKCkge1xcbiAgICBsZXQgaW5uZXJWYXIgPSAnSSBhbSBpbm5lcic7XFxuICAgIGNvbnNvbGUubG9nKGdsb2JhbFZhcik7IC8vICdJIGFtIGdsb2JhbCdcXG4gICAgY29uc29sZS5sb2cob3V0ZXJWYXIpOyAvLyAnSSBhbSBvdXRlcidcXG4gICAgY29uc29sZS5sb2coaW5uZXJWYXIpOyAvLyAnSSBhbSBpbm5lcidcXG4gIH1cXG59XFxuYGBgXFxuXFxuLS0tXFxuXFxuIyMjICoqNi4g6Zet5YyFKipcXG7pl63ljIXmmK/mjIflh73mlbDlj6/ku6Xorr/pl67lhbbor43ms5XkvZznlKjln5/kuK3nmoTlj5jph4/vvIzljbPkvb/lh73mlbDlnKjlhbbor43ms5XkvZznlKjln5/kuYvlpJbmiafooYzjgIJcXG5cXG4jIyMjICoq5Yik5pat5pa55rOVKipcXG4tIOWHveaVsOWGhemDqOWumuS5ieS6huWPpuS4gOS4quWHveaVsO+8jOW5tuS4lOWGhemDqOWHveaVsOW8leeUqOS6huWklumDqOWHveaVsOeahOWPmOmHj+OAglxcblxcbiMjIyMgKirnpLrkvosqKlxcbmBgYGphdmFzY3JpcHRcXG5mdW5jdGlvbiBvdXRlcigpIHtcXG4gIGxldCBvdXRlclZhciA9ICdJIGFtIG91dGVyJztcXG5cXG4gIGZ1bmN0aW9uIGlubmVyKCkge1xcbiAgICBjb25zb2xlLmxvZyhvdXRlclZhcik7IC8vICdJIGFtIG91dGVyJ1xcbiAgfVxcblxcbiAgcmV0dXJuIGlubmVyO1xcbn1cXG5cXG5jb25zdCBpbm5lckZ1bmMgPSBvdXRlcigpO1xcbmlubmVyRnVuYygpO1xcbmBgYFxcblxcbi0tLVxcblxcbiMjIyAqKjcuIOWPmOmHj+aPkOWNhyoqXFxu5Y+Y6YeP5o+Q5Y2H5piv5oyH5Y+Y6YeP5aOw5piO5Lya6KKr5o+Q5Y2H5Yiw5L2c55So5Z+f55qE6aG26YOo77yM5L2G6LWL5YC85LiN5Lya6KKr5o+Q5Y2H44CCXFxuXFxuIyMjIyAqKuWIpOaWreaWueazlSoqXFxuLSDkvb/nlKggYHZhcmAg5aOw5piO55qE5Y+Y6YeP5Lya6KKr5o+Q5Y2H5Yiw5Ye95pWw5L2c55So5Z+f55qE6aG26YOo44CCXFxuLSDkvb/nlKggYGxldGAg5ZKMIGBjb25zdGAg5aOw5piO55qE5Y+Y6YeP5LiN5Lya6KKr5o+Q5Y2H77yM5L2G5Lya6L+b5YWl5pqC5pe25oCn5q275Yy677yIVERa77yJ44CCXFxuXFxuIyMjIyAqKuekuuS+iyoqXFxuYGBgamF2YXNjcmlwdFxcbmNvbnNvbGUubG9nKGhvaXN0ZWRWYXIpOyAvLyB1bmRlZmluZWRcXG52YXIgaG9pc3RlZFZhciA9ICdJIGFtIGhvaXN0ZWQnO1xcblxcbmNvbnNvbGUubG9nKG5vdEhvaXN0ZWRMZXQpOyAvLyBSZWZlcmVuY2VFcnJvcjogQ2Fubm90IGFjY2VzcyAnbm90SG9pc3RlZExldCcgYmVmb3JlIGluaXRpYWxpemF0aW9uXFxubGV0IG5vdEhvaXN0ZWRMZXQgPSAnSSBhbSBub3QgaG9pc3RlZCc7XFxuYGBgXFxuXFxuLS0tXFxuXFxuIyMjICoq5oC757uTKipcXG58ICoq5L2c55So5Z+f57G75Z6LKiogICAgICB8ICoq5Yik5pat5pa55rOVKiogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcXG58ICoq5YWo5bGA5L2c55So5Z+fKiogICAgICB8IOWPmOmHj+WcqOWHveaVsOaIluS7o+eggeWdl+WklumDqOWjsOaYjuOAgiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XFxufCAqKuWHveaVsOS9nOeUqOWfnyoqICAgICAgfCDlj5jph4/lnKjlh73mlbDlhoXpg6jlo7DmmI7vvIzkvb/nlKggYHZhcmDjgIIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxcbnwgKirlnZfnuqfkvZznlKjln58qKiAgICAgIHwg5Y+Y6YeP5Zyo5Luj56CB5Z2X5YaF6YOo5aOw5piO77yM5L2/55SoIGBsZXRgIOaIliBgY29uc3Rg44CCICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxcbnwgKiror43ms5XkvZznlKjln58qKiAgICAgIHwg5Ye95pWw55qE5L2c55So5Z+f55Sx5a6a5LmJ5L2N572u5Yaz5a6a44CCICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcXG58ICoq5L2c55So5Z+f6ZO+KiogICAgICAgIHwgSmF2YVNjcmlwdCDlvJXmk47msr/nnYDkvZznlKjln5/pk77mn6Xmib7lj5jph4/jgIIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcXG58ICoq6Zet5YyFKiogICAgICAgICAgICB8IOWGhemDqOWHveaVsOW8leeUqOWklumDqOWHveaVsOeahOWPmOmHj+OAgiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XFxufCAqKuWPmOmHj+aPkOWNhyoqICAgICAgICB8IGB2YXJgIOWjsOaYjueahOWPmOmHj+S8muiiq+aPkOWNh++8jGBsZXRgIOWSjCBgY29uc3RgIOWjsOaYjueahOWPmOmHj+S4jeS8muOAgiAgICAgICAgICAgICAgICAgICB8XFxuXFxuIyMjIGFzeW5jIOWunueOsOWOn+eQhlxcblxcbmBhc3luY2Ag5Ye95pWw5pivIEphdmFTY3JpcHQg6K+t6KiA5bGC6Z2i55qE54m55oCn77yM5a6D5piv55SxIEphdmFTY3JpcHQg5byV5pOO77yI5aaCIFY444CBU3BpZGVyTW9ua2V5IOetie+8ieWOn+eUn+WunueOsOeahO+8jOiAjOS4jeaYr+mAmui/hyBKYXZhU2NyaXB0IOS7o+eggeWunueOsOeahOOAguWboOatpO+8jGBhc3luY2Ag5Ye95pWw55qE5rqQ56CB5a6e6ZmF5LiK5piv5byV5pOO5YaF6YOo55qEIEMrKyDmiJbmsYfnvJbku6PnoIHvvIzogIzkuI3mmK8gSmF2YVNjcmlwdCDku6PnoIHjgIJcXG5cXG7kuI3ov4fvvIzmiJHku6zlj6/ku6XpgJrov4fnkIbop6MgYGFzeW5jYCDlh73mlbDnmoTooYzkuLrlkozlupXlsYLljp/nkIbvvIzmnaXmqKHmi5/lroPnmoTlrp7njrDjgIJgYXN5bmNgIOWHveaVsOacrOi0qOS4iuaYr+WfuuS6jiBgUHJvbWlzZWAg5ZKM55Sf5oiQ5Zmo77yIYEdlbmVyYXRvcmDvvInnmoTor63ms5Xns5bjgILku6XkuIvmmK8gYGFzeW5jYCDlh73mlbDnmoTlupXlsYLljp/nkIblkozmqKHmi5/lrp7njrDvvJpcXG5cXG4tLS1cXG5cXG4jIyMgKioxLiBgYXN5bmNgIOWHveaVsOeahOW6leWxguWOn+eQhioqXFxuYGFzeW5jYCDlh73mlbDnmoTooYzkuLrlj6/ku6XliIbop6PkuLrku6XkuIvlh6DkuKrlhbPplK7ngrnvvJpcXG4xLiAqKui/lOWbniBgUHJvbWlzZWAqKu+8mmBhc3luY2Ag5Ye95pWw5oC75piv6L+U5Zue5LiA5LiqIGBQcm9taXNlYOOAguWmguaenOWHveaVsOi/lOWbnuWAvOS4jeaYryBgUHJvbWlzZWDvvIzlroPkvJrooqvoh6rliqjljIXoo4XmiJDkuIDkuKogYFByb21pc2Vg44CCXFxuXFxuMi4gKipgYXdhaXRgIOeahOS9nOeUqCoq77yaYGF3YWl0YCDlhbPplK7lrZfkvJrmmoLlgZzlh73mlbDnmoTmiafooYzvvIznm7TliLAgYFByb21pc2VgIOWujOaIkOOAguWmguaenCBgUHJvbWlzZWAg6KKrIGByZXNvbHZlYO+8jGBhd2FpdGAg6L+U5Zue6Kej5p6Q5YC877yb5aaC5p6cIGBQcm9taXNlYCDooqsgYHJlamVjdGDvvIxgYXdhaXRgIOS8muaKm+WHuumUmeivr+OAglxcblxcbjMuICoq6ZSZ6K+v5aSE55CGKirvvJpgYXN5bmNgIOWHveaVsOS4reeahOmUmeivr+S8muiiq+aNleiOt+W5tuS8oOmAkue7mei/lOWbnueahCBgUHJvbWlzZWAg55qEIGByZWplY3Rg44CCXFxuXFxuLS0tXFxuXFxuIyMjICoqMi4g5L2/55So55Sf5oiQ5Zmo5qih5oufIGBhc3luY2Ag5Ye95pWwKipcXG5cXG5gYXN5bmNgIOWHveaVsOeahOihjOS4uuWPr+S7peeUqOeUn+aIkOWZqO+8iGBHZW5lcmF0b3Jg77yJ5ZKMIGBQcm9taXNlYCDmnaXmqKHmi5/jgILku6XkuIvmmK/kuIDkuKrnroDljZXnmoTlrp7njrDvvJpcXG5cXG5gYGBqYXZhc2NyaXB0XFxuLy8g5qih5oufIGFzeW5jIOWHveaVsFxcbmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yKGdlbmVyYXRvckZ1bmMpIHtcXG4gIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xcbiAgICBjb25zdCBnZW5lcmF0b3IgPSBnZW5lcmF0b3JGdW5jKC4uLmFyZ3MpO1xcblxcbiAgICAvLyDpgJLlvZLlpITnkIbnlJ/miJDlmajnmoQgbmV4dCDmlrnms5VcXG4gICAgZnVuY3Rpb24gaGFuZGxlKHJlc3VsdCkge1xcbiAgICAgIGlmIChyZXN1bHQuZG9uZSkge1xcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXN1bHQudmFsdWUpO1xcbiAgICAgIH1cXG5cXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3VsdC52YWx1ZSlcXG4gICAgICAgIC50aGVuKChyZXMpID0+IGhhbmRsZShnZW5lcmF0b3IubmV4dChyZXMpKSlcXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiBoYW5kbGUoZ2VuZXJhdG9yLnRocm93KGVycikpKTtcXG4gICAgfVxcblxcbiAgICB0cnkge1xcbiAgICAgIHJldHVybiBoYW5kbGUoZ2VuZXJhdG9yLm5leHQoKSk7XFxuICAgIH0gY2F0Y2ggKGVycikge1xcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnIpO1xcbiAgICB9XFxuICB9O1xcbn1cXG5cXG4vLyDnpLrkvovvvJrmqKHmi58gYXN5bmMg5Ye95pWwXFxuY29uc3QgbXlBc3luY0Z1bmN0aW9uID0gYXN5bmNHZW5lcmF0b3IoZnVuY3Rpb24qICgpIHtcXG4gIHRyeSB7XFxuICAgIGNvbnN0IHJlc3VsdDEgPSB5aWVsZCBmZXRjaERhdGExKCk7XFxuICAgIGNvbnNvbGUubG9nKHJlc3VsdDEpOyAvLyAnRGF0YSAxIGZldGNoZWQhJ1xcbiAgICBjb25zdCByZXN1bHQyID0geWllbGQgZmV0Y2hEYXRhMigpO1xcbiAgICBjb25zb2xlLmxvZyhyZXN1bHQyKTsgLy8gJ0RhdGEgMiBmZXRjaGVkISdcXG4gIH0gY2F0Y2ggKGVycm9yKSB7XFxuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xcbiAgfVxcbn0pO1xcblxcbmBgYFxcblxcbi0tLVxcblxcbiMjIyAqKjMuIOino+mHiuaooeaLn+WunueOsCoqXFxuLSAqKmBhc3luY0dlbmVyYXRvcmAg5Ye95pWwKirvvJrmjqXlj5fkuIDkuKrnlJ/miJDlmajlh73mlbDkvZzkuLrlj4LmlbDvvIzov5Tlm57kuIDkuKrmlrDnmoTlh73mlbDjgILov5nkuKrmlrDlh73mlbDkvJrov5Tlm57kuIDkuKogYFByb21pc2Vg77yM5bm25aSE55CG55Sf5oiQ5Zmo55qEIGBuZXh0YCDmlrnms5XjgIJcXG5cXG4tICoqYGhhbmRsZWAg5Ye95pWwKirvvJrpgJLlvZLlpITnkIbnlJ/miJDlmajnmoQgYG5leHRgIOaWueazleOAguWmguaenOeUn+aIkOWZqOi/lOWbnueahCBgUHJvbWlzZWAg5a6M5oiQ77yM57un57ut6LCD55SoIGBuZXh0YO+8m+WmguaenCBgUHJvbWlzZWAg6KKrIGByZWplY3Rg77yM6LCD55SoIGBnZW5lcmF0b3IudGhyb3dgIOaKm+WHuumUmeivr+OAglxcblxcbi0gKirnlJ/miJDlmajlh73mlbAqKu+8muS9v+eUqCBgeWllbGRgIOaaguWBnOaJp+ihjO+8jOW5tuetieW+hSBgUHJvbWlzZWAg5a6M5oiQ44CCXFxuXFxuLS0tXFxuXFxuIyMjICoqNC4g5Y6f55SfIGBhc3luY2Ag5Ye95pWw55qE5LyY5Yq/KipcXG7omb3nhLbmiJHku6zlj6/ku6XnlKjnlJ/miJDlmajmqKHmi58gYGFzeW5jYCDlh73mlbDvvIzkvYbljp/nlJ/nmoQgYGFzeW5jYCDlh73mlbDmnInku6XkuIvkvJjlir/vvJpcXG4tICoq6K+t5rOV5pu0566A5rSBKirvvJpgYXN5bmNgIOWSjCBgYXdhaXRgIOeahOivreazleavlOeUn+aIkOWZqOabtOebtOinguOAglxcbi0gKirmgKfog73mm7Tlpb0qKu+8muWOn+eUn+WunueOsOeUsSBKYXZhU2NyaXB0IOW8leaTjuS8mOWMlu+8jOaAp+iDveabtOmrmOOAglxcbi0gKirplJnor6/lpITnkIbmm7TnroDljZUqKu+8mmBhc3luY2Ag5Ye95pWw5YaF572u5LqGIGB0cnkuLi5jYXRjaGAg55qE6ZSZ6K+v5aSE55CG5py65Yi244CCXFxuLS0tXFxuXFxuIyMjICoqNS4g5oC757uTKipcXG5gYXN5bmNgIOWHveaVsOaYryBKYXZhU2NyaXB0IOW8leaTjuWOn+eUn+WunueOsOeahOeJueaAp++8jOW6leWxguWfuuS6jiBgUHJvbWlzZWAg5ZKM55Sf5oiQ5Zmo44CC6Jm954S25oiR5Lus5Y+v5Lul55So55Sf5oiQ5Zmo5qih5ouf5a6D55qE6KGM5Li677yM5L2G5Y6f55SfIGBhc3luY2Ag5Ye9XFxuXFxuXFxuIyMjIGZpYmVyIOaetuaehFxcblxcbkZpYmVyIOaetuaehOaYryBSZWFjdCAxNiDlvJXlhaXnmoTkuIDnp43mlrDnmoTmuLLmn5PlvJXmk47vvIzlroPnmoTmoLjlv4Pnm67moIfmmK/mj5Dpq5ggUmVhY3Qg5bqU55So55qE5oCn6IO95ZKM5ZON5bqU6IO95Yqb77yM5bCk5YW25piv5Zyo5aSE55CG5aSn5Z6L44CB5aSN5p2C55qE5bqU55So5pe244CC5Lul5LiL5pivIEZpYmVyIOaetuaehOeahOivpue7huino+mHiu+8mlxcblxcbioqMS4gRmliZXIg5p625p6E55qE6IOM5pmv5ZKM5Yqo5py6KipcXG5cXG7lnKggUmVhY3QgMTYg5LmL5YmN77yMUmVhY3Qg5L2/55So55qE5piv5ZCM5q2l55qE6YCS5b2S5riy5p+T5pa55byP44CC6L+Z56eN5pa55byP55qE57y654K55piv77yaXFxuXFxuKiAqKumYu+WhnuS4u+e6v+eoi++8mioqIOW9k+e7hOS7tuagkeW+iOWkp+aIluabtOaWsOW+iOmikee5geaXtu+8jOa4suafk+i/h+eoi+WPr+iDveS8mumVv+aXtumXtOWNoOeUqOS4u+e6v+eoi++8jOWvvOiHtOa1j+iniOWZqOaXoOazleWTjeW6lOeUqOaIt+S6pOS6ku+8jOWHuueOsOWNoemhv+eOsOixoeOAglxcbiogKirml6Dms5XkuK3mlq3vvJoqKiDkuIDml6bmuLLmn5PlvIDlp4vvvIzlsLHlv4XpobvlrozmiJDvvIzml6Dms5XkuK3mlq3jgILov5nkvb/lvpcgUmVhY3Qg6Zq+5Lul5aSE55CG6auY5LyY5YWI57qn55qE5Lu75Yqh77yM5aaC55So5oi36L6T5YWl44CCXFxuXFxu5Li65LqG6Kej5Yaz6L+Z5Lqb6Zeu6aKY77yMUmVhY3Qg5Zui6Zif5byV5YWl5LqGIEZpYmVyIOaetuaehOOAglxcblxcbioqMi4gRmliZXIg5p625p6E55qE5qC45b+D5qaC5b+1KipcXG5cXG4qICoqRmliZXIg6IqC54K577yaKiogRmliZXIg5p625p6E55qE5qC45b+D5pivIEZpYmVyIOiKgueCue+8jOWug+aYr+S4gOS4qiBKYXZhU2NyaXB0IOWvueixoe+8jOS7o+ihqOS4gOS4qiBSZWFjdCDnu4Tku7bmiJYgRE9NIOWFg+e0oOOAguavj+S4qiBGaWJlciDoioLngrnpg73ljIXlkKvku6XkuIvkv6Hmga/vvJpcXG4gICAgKiDnu4Tku7bnmoTnsbvlnovjgIFwcm9wcyDlkowgc3RhdGVcXG4gICAgKiDmjIflkJHlhbblrZDoioLngrnjgIHlhYTlvJ/oioLngrnlkozniLboioLngrnnmoTmjIfpkohcXG4gICAgKiDpnIDopoHmiafooYznmoTlt6XkvZzvvIjlpoLmm7TmlrAgRE9N77yJXFxuKiAqKuW3peS9nOW+queOr++8iFdvcmsgTG9vcO+8ie+8mioqIEZpYmVyIOaetuaehOS9v+eUqOW3peS9nOW+queOr+adpemBjeWOhiBGaWJlciDmoJHvvIzlubbmiafooYzpnIDopoHmiafooYznmoTlt6XkvZzjgILlt6XkvZzlvqrnjq/lj6/ku6XkuK3mlq3lkozmgaLlpI3vvIzlhYHorrggUmVhY3Qg5Zyo5riy5p+T6L+H56iL5Lit5ZON5bqU6auY5LyY5YWI57qn55qE5Lu75Yqh44CCXFxuKiAqKuS8mOWFiOe6p++8mioqIEZpYmVyIOaetuaehOW8leWFpeS6huS8mOWFiOe6p+eahOamguW/te+8jOWFgeiuuCBSZWFjdCDmoLnmja7ku7vliqHnmoTph43opoHmgKfmnaXosIPluqbku7vliqHjgILkvovlpoLvvIznlKjmiLfovpPlhaXkuovku7bnmoTkvJjlhYjnuqfpq5jkuo7lkI7lj7DmlbDmja7mm7TmlrDjgIJcXG4qICoq5Y+M57yT5Yay77yaKiogRmliZXIg5p625p6E5L2/55So5Y+M57yT5Yay5oqA5pyv5p2l5o+Q6auY5riy5p+T5oCn6IO944CC5a6D57u05oqk5Lik5qO1IEZpYmVyIOagke+8muW9k+WJjeagke+8iGN1cnJlbnQgdHJlZe+8ieWSjOW3peS9nOagke+8iHdvcmstaW4tcHJvZ3Jlc3MgdHJlZe+8ieOAguW3peS9nOagkeeUqOS6juaehOW7uuaWsOeahCBVSe+8jOiAjOW9k+WJjeagkeeUqOS6juaYvuekuuW9k+WJjeeahCBVSeOAguS4gOaXpuW3peS9nOagkeaehOW7uuWujOaIkO+8jFJlYWN0IOS8muWwhuWug+WIh+aNouS4uuW9k+WJjeagkeOAglxcblxcbioqMy4gRmliZXIg5p625p6E55qE5bel5L2c5Y6f55CGKipcXG5cXG5GaWJlciDmnrbmnoTnmoTmuLLmn5Pov4fnqIvliIbkuLrkuKTkuKrpmLbmrrXvvJpcXG5cXG4qICoq5riy5p+T6Zi25q6177yIUmVuZGVyIFBoYXNl77yJ77yaKiog5Zyo6L+Z5Liq6Zi25q6177yMUmVhY3Qg5Lya6YGN5Y6GIEZpYmVyIOagke+8jOW5tuaehOW7uuW3peS9nOagkeOAgui/meS4qumYtuauteeahOW3peS9nOaYr+WPr+S7peS4reaWreeahOOAglxcbiogKirmj5DkuqTpmLbmrrXvvIhDb21taXQgUGhhc2XvvInvvJoqKiDlnKjov5nkuKrpmLbmrrXvvIxSZWFjdCDkvJrlsIblt6XkvZzmoJHnmoTmm7TmlLnlupTnlKjliLAgRE9N44CC6L+Z5Liq6Zi25q6155qE5bel5L2c5piv5LiN5Y+v5Lit5pat55qE44CCXFxuXFxuKio0LiBGaWJlciDmnrbmnoTnmoTkvJjlir8qKlxcblxcbiogKirmj5Dpq5jmgKfog73vvJoqKiBGaWJlciDmnrbmnoTlhYHorrggUmVhY3Qg5Zyo5riy5p+T6L+H56iL5Lit5Lit5pat5ZKM5oGi5aSN77yM5LuO6ICM6YG/5YWN5LqG6ZW/5pe26Ze06Zi75aGe5Li757q/56iL44CCXFxuKiAqKuaPkOmrmOWTjeW6lOiDveWKm++8mioqIEZpYmVyIOaetuaehOWFgeiuuCBSZWFjdCDkvJjlhYjlpITnkIbpq5jkvJjlhYjnuqfnmoTku7vliqHvvIzlpoLnlKjmiLfovpPlhaXkuovku7bvvIzku47ogIzmj5Dpq5jkuoblupTnlKjnmoTlk43lupTog73lipvjgIJcXG4qICoq5pu05aW955qE55So5oi35L2T6aqM77yaKiog6YCa6L+H5o+Q6auY5oCn6IO95ZKM5ZON5bqU6IO95Yqb77yMRmliZXIg5p625p6E5Y+v5Lul5o+Q5L6b5pu05rWB55WF44CB5pu05oSJ5oKm55qE55So5oi35L2T6aqM44CCXFxuXFxuKio1LiDmgLvnu5MqKlxcbkZpYmVyIOaetuaehOaYryBSZWFjdCDnmoTkuIDpobnph43lpKfmlLnov5vvvIzlroPpgJrov4flvJXlhaUgRmliZXIg6IqC54K544CB5bel5L2c5b6q546v44CB5LyY5YWI57qn5ZKM5Y+M57yT5Yay562J5qaC5b+177yM5o+Q6auY5LqGIFJlYWN0IOW6lOeUqOeahOaAp+iDveWSjOWTjeW6lOiDveWKm+OAguiZveeEtkZpYmVy5p625p6E55qE5a6e546w6Z2e5bi45aSN5p2C77yM5L2G5piv5a6D5Li6UmVhY3TluKbmnaXkuobmm7TliqDlvLrlpKfnmoTmuLLmn5Pog73lipvvvIzog73lpJ/mlK/mjIHmm7TliqDlpI3mnYLvvIzmm7TlpKfop4TmqKHnmoTlupTnlKjnqIvluo/jgIJcXG5cXG5cXG5cXG5cXG4jIyMgYmFiZWwg6L2s5o2i5Y6f55CGXFxuQmFiZWwg5piv5LiA5Liq5bm/5rOb5L2/55So55qEIEphdmFTY3JpcHQg57yW6K+R5Zmo77yM5a6D5Li76KaB55So5LqO5bCGIEVDTUFTY3JpcHQgMjAxNSsg5Luj56CB6L2s5o2i5Li65ZCR5ZCO5YW85a6555qEIEphdmFTY3JpcHQg54mI5pys77yM5Lul5L6/6IO95aSf5Zyo5pen54mI5pys5rWP6KeI5Zmo5oiW546v5aKD5Lit6L+Q6KGM44CC5Lul5LiL5pivIEJhYmVsIOi9rOaNouWOn+eQhueahOivpue7huino+mHiu+8mlxcblxcbioqMS4g5Z+65pys5qaC5b+1KipcXG5cXG4qICoq5rqQ5Luj56CB77yIU291cmNlIENvZGXvvInvvJoqKiDov5nmmK/mgqjnvJblhpnnmoTljp/lp4sgSmF2YVNjcmlwdCDku6PnoIHvvIzlj6/og73ljIXlkKvmlrDnmoQgRUNNQVNjcmlwdCDnibnmgKfjgIJcXG4qICoq55uu5qCH5Luj56CB77yIVGFyZ2V0IENvZGXvvInvvJoqKiDov5nmmK8gQmFiZWwg55Sf5oiQ55qE6L2s5o2i5ZCO55qEIEphdmFTY3JpcHQg5Luj56CB77yM5a6D5LiO5pen54mI5pys5rWP6KeI5Zmo5oiW546v5aKD5YW85a6544CCXFxuKiAqKuaKveixoeivreazleagke+8iEFTVO+8ie+8mioqIEFTVCDmmK/mupDku6PnoIHnmoTmoJHnirbooajnpLrvvIzlroPmjZXmjYnkuobku6PnoIHnmoTnu5PmnoTlkozlkKvkuYnjgIJcXG5cXG4qKjIuIEJhYmVsIOeahOW3peS9nOa1geeoiyoqXFxuXFxuQmFiZWwg55qE6L2s5o2i6L+H56iL5Li76KaB5YyF5ous5Lul5LiL5LiJ5Liq6Zi25q6177yaXFxuXFxuKiAqKuino+aekO+8iFBhcnNpbmfvvInvvJoqKlxcbiAgICAqIOWcqOi/meS4qumYtuaute+8jEJhYmVsIOWwhua6kOS7o+eggeino+aekOS4uiBBU1TjgIJcXG4gICAgKiDop6PmnpDov4fnqIvliIbkuLrkuKTkuKrlrZDpmLbmrrXvvJpcXG4gICAgICAgICog6K+N5rOV5YiG5p6Q77yITGV4aWNhbCBBbmFseXNpc++8ie+8muWwhua6kOS7o+eggeWIhuino+S4uiB0b2tlbu+8iOagh+iusO+8iea1geOAglxcbiAgICAgICAgKiDor63ms5XliIbmnpDvvIhTeW50YWN0aWMgQW5hbHlzaXPvvInvvJrmoLnmja7or63ms5Xop4TliJnvvIzlsIYgdG9rZW4g5rWB6L2s5o2i5Li6IEFTVOOAglxcbiogKirovazmjaLvvIhUcmFuc2Zvcm1hdGlvbu+8ie+8mioqXFxuICAgICog5Zyo6L+Z5Liq6Zi25q6177yMQmFiZWwg6YGN5Y6GIEFTVO+8jOW5tuW6lOeUqOWQhOenjei9rOaNouaPkuS7tu+8iHBsdWdpbnPvvInmnaXkv67mlLkgQVNU44CCXFxuICAgICog6L2s5o2i5o+S5Lu25Y+v5Lul5re75Yqg44CB5Yig6Zmk5oiW5L+u5pS5IEFTVCDoioLngrnvvIzku47ogIzlrp7njrDku6PnoIHnmoTovazmjaLjgIJcXG4gICAgKiDkvovlpoLvvIzkuIDkuKrmj5Lku7blj6/ku6XlsIbnrq3lpLTlh73mlbDovazmjaLkuLrkvKDnu5/nmoTlh73mlbDooajovr7lvI/jgIJcXG4qICoq55Sf5oiQ77yIR2VuZXJhdGlvbu+8ie+8mioqXFxuICAgICog5Zyo6L+Z5Liq6Zi25q6177yMQmFiZWwg5bCG5L+u5pS55ZCO55qEIEFTVCDovazmjaLlm54gSmF2YVNjcmlwdCDku6PnoIHjgIJcXG4gICAgKiDnlJ/miJDov4fnqIvlsIYgQVNUIOiKgueCuei9rOaNouS4uuebuOW6lOeahCBKYXZhU2NyaXB0IOivreazle+8jOW5tueUn+aIkOebruagh+S7o+eggeOAglxcblxcbioqMy4g5qC45b+D57uE5oiQ6YOo5YiGKipcXG5cXG4qICoqQGJhYmVsL2NvcmXvvJoqKiBCYWJlbCDnmoTmoLjlv4PlupPvvIzmj5DkvpvkuoYgQmFiZWwg55qE5Li76KaB5Yqf6IO977yM5YyF5ous6Kej5p6Q44CB6L2s5o2i5ZKM55Sf5oiQ5Luj56CB44CCXFxuKiAqKkBiYWJlbC9wYXJzZXLvvJoqKiBCYWJlbCDnmoTop6PmnpDlmajvvIznlKjkuo7lsIYgSmF2YVNjcmlwdCDku6PnoIHop6PmnpDkuLogQVNU44CCXFxuKiAqKkBiYWJlbC90cmF2ZXJzZe+8mioqIEJhYmVsIOeahOmBjeWOhuWZqO+8jOeUqOS6jumBjeWOhuWSjOS/ruaUuSBBU1TjgIJcXG4qICoqQGJhYmVsL2dlbmVyYXRvcu+8mioqIEJhYmVsIOeahOeUn+aIkOWZqO+8jOeUqOS6juWwhiBBU1Qg6L2s5o2i5ZueIEphdmFTY3JpcHQg5Luj56CB44CCXFxuKiAqKkBiYWJlbC9wbHVnaW4tXFxcXCrvvJoqKiBCYWJlbCDnmoTmj5Lku7bvvIznlKjkuo7lrp7njrDlkITnp43ku6PnoIHovazmjaLlip/og73jgIJcXG4qICoqQGJhYmVsL3ByZXNldC1cXFxcKu+8mioqIEJhYmVsIOeahOmihOiuvu+8jOaYr+S4gOe7hOaPkuS7tueahOmbhuWQiO+8jOeUqOS6juWunueOsOeJueWumueahOS7o+eggei9rOaNouebruagh+OAglxcblxcbioqNC4g6L2s5o2i56S65L6LKipcXG5cXG7kvovlpoLvvIzogIPomZHku6XkuIvkvb/nlKjnrq3lpLTlh73mlbDnmoQgRVM2IOS7o+egge+8mlxcblxcbmBgYGphdmFzY3JpcHRcXG5jb25zdCBhZGQgPSAoYSwgYikgPT4gYSArIGI7XFxuYGBgXFxuXFxuQmFiZWwg5Y+v5Lul5bCG5YW26L2s5o2i5Li65Lul5LiLIEVTNSDku6PnoIHvvJpcXG5cXG5gYGBqYXZhc2NyaXB0XFxudmFyIGFkZCA9IGZ1bmN0aW9uIGFkZChhLCBiKSB7XFxuICByZXR1cm4gYSArIGI7XFxufTtcXG5gYGBcXG5cXG7lnKjov5nkuKrkvovlrZDkuK3vvIxCYWJlbCDkvb/nlKjkuIDkuKrmj5Lku7blsIbnrq3lpLTlh73mlbDovazmjaLkuLrkvKDnu5/nmoTlh73mlbDooajovr7lvI/jgIJcXG5cXG4qKjUuIOaAu+e7kyoqXFxuXFxuQmFiZWwg6YCa6L+H5bCGIEphdmFTY3JpcHQg5Luj56CB6Kej5p6Q5Li6IEFTVO+8jOeEtuWQjuW6lOeUqOi9rOaNouaPkuS7tuadpeS/ruaUuSBBU1TvvIzmnIDlkI7lsIbkv67mlLnlkI7nmoQgQVNUIOeUn+aIkOS4uuebruagh+S7o+egge+8jOS7juiAjOWunueOsOS6huS7o+eggeeahOi9rOaNouOAgui/meenjeeBtea0u+eahOaetuaehOS9v+W+lyBCYWJlbCDog73lpJ/mlK/mjIHlkITnp43ku6PnoIHovazmjaLpnIDmsYLvvIzlubbmiJDkuLrnjrDku6MgSmF2YVNjcmlwdCDlvIDlj5HkuK3kuI3lj6/miJbnvLrnmoTlt6XlhbfjgIJcXG5cXG4jIyMg5Z+65LqO5LqL5Lu25b6q546v55qEIEphdmFTY3JpcHQg546v5aKD5Lit77yMRE9NIOabtOaWsOWSjOa4suafk+eahOaXtuaculxcblxcbuWcqOWfuuS6juS6i+S7tuW+queOr+eahCBKYXZhU2NyaXB0IOeOr+Wig+S4re+8jERPTSDmm7TmlrDlkozmuLLmn5PnmoTml7bmnLrmtonlj4rlvq7ku7vliqHpmJ/liJflkozlro/ku7vliqHpmJ/liJfvvIzku6Xlj4rmtY/op4jlmajnmoTmuLLmn5PmnLrliLbjgILku6XkuIvmmK/or6bnu4bop6Pph4rvvJpcXG5cXG4qKjEuIOS6i+S7tuW+queOr+S4juS7u+WKoemYn+WIl++8mioqXFxuXFxuKiAqKuWuj+S7u+WKoe+8iE1hY3JvLXRhc2vvvInvvJoqKlxcbiAgICAqIOWMheaLrCBzY3JpcHTvvIjmlbTkvZPku6PnoIHvvInjgIFzZXRUaW1lb3V044CBc2V0SW50ZXJ2YWzjgIFJL08g5pON5L2c562J44CCXFxuICAgICog5q+P5qyh5LqL5Lu25b6q546v6YO95Lya5LuO5a6P5Lu75Yqh6Zif5YiX5Lit5Y+W5Ye65LiA5Liq5Lu75Yqh5omn6KGM44CCXFxuKiAqKuW+ruS7u+WKoe+8iE1pY3JvLXRhc2vvvInvvJoqKlxcbiAgICAqIOWMheaLrCBQcm9taXNlLnRoZW7jgIFNdXRhdGlvbk9ic2VydmVy44CBcHJvY2Vzcy5uZXh0VGlja++8iE5vZGUuanPvvInnrYnjgIJcXG4gICAgKiDlnKjmr4/kuKrlro/ku7vliqHmiafooYzlrozmr5XlkI7vvIzkvJrmuIXnqbrlvq7ku7vliqHpmJ/liJfjgIJcXG5cXG4qKjIuIERPTSDmm7TmlrDnmoTml7bmnLrvvJoqKlxcblxcbiogRE9NIOeahOS/ruaUueaYr+WQjOatpeeahO+8mlxcbiAgICAqIOW9kyBKYXZhU2NyaXB0IOS7o+eggeaJp+ihjCBET00g5pON5L2c5pe277yMRE9NIOe7k+aehOS8mueri+WNs+WPkeeUn+WPmOWMluOAglxcbiogKipET00g5riy5p+T55qE5pe25py677yaKipcXG4gICAgKiDmtY/op4jlmajkuI3kvJrnq4vljbPlsIYgRE9NIOeahOWPmOWMluWPjeaYoOWIsOWxj+W5leS4iu+8jOiAjOaYr+S8muetieW+heS4gOS4quWQiOmAgueahOaXtuacuuOAglxcbiAgICAqIOmAmuW4uOaDheWGteS4i++8jOa1j+iniOWZqOS8muWcqOS7peS4i+aXtuacuui/m+ihjCBET00g5riy5p+T77yaXFxuICAgICAgICAqIOWcqOW9k+WJjeWuj+S7u+WKoeaJp+ihjOWujOavle+8jOW5tuS4lOW+ruS7u+WKoemYn+WIl+a4heepuuS5i+WQjuOAglxcbiAgICAgICAgKiDlnKjmtY/op4jlmajlh4blpIfov5vooYzkuIvkuIDmrKHlsY/luZXliLfmlrDkuYvliY3jgIJcXG5cXG4qKjMuIOivpue7hui/h+eoi++8mioqXFxuXFxuMS4gICoqSmF2YVNjcmlwdCDku6PnoIHmiafooYzvvJoqKlxcbiAgICAqIOW9kyBKYXZhU2NyaXB0IOS7o+eggeaJp+ihjCBET00g5pON5L2c5pe277yMRE9NIOe7k+aehOS8mueri+WNs+abtOaWsOOAglxcbjIuICAqKuW+ruS7u+WKoemYn+WIl++8mioqXFxuICAgICog5Zyo5b2T5YmN5a6P5Lu75Yqh5omn6KGM6L+H56iL5Lit77yM5aaC5p6c6YGH5Yiw5b6u5Lu75Yqh77yM5Lya5bCG5a6D5Lus5re75Yqg5Yiw5b6u5Lu75Yqh6Zif5YiX5Lit44CCXFxuMy4gICoq5b6u5Lu75Yqh5omn6KGM77yaKipcXG4gICAgKiDlvZPlvZPliY3lro/ku7vliqHmiafooYzlrozmr5XlkI7vvIzkuovku7blvqrnjq/kvJrmo4Dmn6Xlvq7ku7vliqHpmJ/liJfjgIJcXG4gICAgKiDlpoLmnpzlvq7ku7vliqHpmJ/liJfkuI3kuLrnqbrvvIzkvJrkvp3mrKHmiafooYzpmJ/liJfkuK3nmoTmiYDmnInlvq7ku7vliqHjgIJcXG40LiAgKipET00g5riy5p+T77yaKipcXG4gICAgKiDlvZPlvq7ku7vliqHpmJ/liJfmuIXnqbrlkI7vvIzmtY/op4jlmajkvJrmoLnmja4gRE9NIOeahOWPmOWMlu+8jOi/m+ihjOW4g+WxgO+8iGxheW91dO+8ieWSjOe7mOWItu+8iHBhaW5077yJ77yM5bCG5pu05paw5ZCO55qE5YaF5a655riy5p+T5Yiw5bGP5bmV5LiK44CCXFxuNS4gICoq5LiL5LiA5qyh5LqL5Lu25b6q546v77yaKipcXG4gICAgKiDmtY/op4jlmajlh4blpIfov5vooYzkuIvkuIDmrKHlsY/luZXliLfmlrDvvIzmiJbogIXmnInmlrDnmoTlro/ku7vliqHpnIDopoHmiafooYzvvIzkuovku7blvqrnjq/kvJrnu6fnu63ov5vooYzjgIJcXG5cXG4qKjQuIOaAu+e7k++8mioqXFxuXFxuKiBET00g55qE5L+u5pS55piv5ZCM5q2l55qE77yM5Y2z5pe25Y+R55Sf44CCXFxuKiBET03nmoTmuLLmn5PmmK/lvILmraXnmoTvvIzlnKjlvq7ku7vliqHpmJ/liJfmuIXnqbrlkI7vvIzlro/ku7vliqHljbPlsIbnu5PmnZ/ml7bvvIzmtY/op4jlmajkvJrnu5/kuIDov5vooYzmuLLmn5PjgIJcXG4qIOWboOatpO+8jERPTSDmm7TmlrDlj5HnlJ/lnKjlkIzmraXku6PnoIHkuK3vvIzogIxET03muLLmn5Plj5HnlJ/lnKjlvq7ku7vliqHnu5PmnZ/kuYvlkI7vvIzkuIvkuIDkuKrlro/ku7vliqHlvIDlp4vkuYvliY3jgIJcXG5cXG4qKjUuIOihpeWFheivtOaYju+8mioqXFxuXFxuKiDmnInkupvmg4XlhrXkuIvvvIzmtY/op4jlmajlj6/og73kvJrlvLrliLbov5vooYzlkIzmraXluIPlsYDvvIzkvovlpoLvvIzlvZMgSmF2YVNjcmlwdCDku6PnoIHpnIDopoHnq4vljbPojrflj5bmn5DkuKogRE9NIOWFg+e0oOeahOW4g+WxgOS/oeaBr+aXtuOAglxcbiogdnVl562J5qGG5p6277yM5Li65LqG5oCn6IO95LyY5YyW77yM5Lya5a+5RE9N55qE5pu05paw6L+b6KGM5om56YeP5aSE55CG77yM5Lya5oqK6KaB5Y+R55Sf55qERE9N5pu05paw5pS+5Yiw5b6u5Lu75Yqh6Zif5YiX5Lit77yM5Zyo5b6u5Lu75Yqh5Lit57uf5LiA5pu05pawRE9N44CCXFxuXFxuXFxuIyMjIGNzcyDnmoTkvJjljJZcXG5cXG5DU1Mg5LyY5YyW5a+55LqO5o+Q5Y2H572R56uZ5oCn6IO95ZKM55So5oi35L2T6aqM6Iez5YWz6YeN6KaB44CC5Lul5LiL5piv5LiA5Lqb5bi46KeB55qEIENTUyDkvJjljJbnrZbnlaXvvJpcXG5cXG4qKjEuIOS7o+eggee7hOe7h+S4jue7k+aehOS8mOWMlioqXFxuXFxuKiAqKuS9v+eUqOWklumDqOagt+W8j+ihqO+8mioqXFxuICAgICog5bCGIENTUyDku6PnoIHmlL7lnKjlpJbpg6jmlofku7bkuK3vvIzlj6/ku6XliKnnlKjmtY/op4jlmajnvJPlrZjvvIzlh4/lsJHph43lpI3kuIvovb3jgIJcXG4qICoq57K+566AIENTUyDku6PnoIHvvJoqKlxcbiAgICAqIOWIoOmZpOS4jeW/heimgeeahOepuuagvOOAgeaNouihjOWSjOazqOmHiuOAglxcbiAgICAqIOS9v+eUqCBDU1Mg5Y6L57yp5bel5YW377yI5aaCIENTU05hbm/vvInoh6rliqjljovnvKnku6PnoIHjgIJcXG4qICoq5ZCI55CG57uE57uHIENTUyDnu5PmnoTvvJoqKlxcbiAgICAqIOS9v+eUqOaooeWdl+WMliBDU1NcXG4gICAgKiDpgb/lhY3ov4fluqbltYzlpZfvvIzkv53mjIHpgInmi6nlmajnmoTnroDmtIHjgIJcXG5cXG4qKjIuIOmAieaLqeWZqOS8mOWMlioqXFxuXFxuKiAqKumBv+WFjeS9v+eUqOmAmueUqOmAieaLqeWZqO+8iFxcXFwq77yJ77yaKipcXG4gICAgKiDpgJrnlKjpgInmi6nlmajkvJrljLnphY3miYDmnInlhYPntKDvvIzlvbHlk43mgKfog73jgIJcXG4qICoq5YeP5bCR6YCJ5oup5Zmo55qE5bGC57qn77yaKipcXG4gICAgKiDpgInmi6nlmajlsYLnuqfotormt7HvvIzljLnphY3mlYjnjofotorkvY7jgIJcXG4gICAgKiDlsL3ph4/kvb/nlKjnsbvpgInmi6nlmajmiJYgSUQg6YCJ5oup5Zmo44CCXFxuKiAqKumBv+WFjeS9v+eUqOS9juaViOeahOmAieaLqeWZqO+8mioqXFxuICAgICog5aaC5bGe5oCn6YCJ5oup5Zmo44CB5a2Q6YCJ5oup5Zmo562J77yM5Zyo5p+Q5Lqb5oOF5Ya15LiL5Lya5b2x5ZON5oCn6IO944CCXFxuKiAqKuS9v+eUqOato+ehrueahOmAieaLqeWZqO+8mioqXFxuICAgICogSUTpgInmi6nlmajvvJojbXlEaXZcXG4gICAgKiDnsbvpgInmi6nlmajvvJoubXljbGFzc1xcbiAgICAqIOWFg+e0oOmAieaLqeWZqO+8mmRpdlxcbiAgICAqIOWxnuaAp+mAieaLqeWZqO+8mlt0eXBlPVxcXCJ0ZXh0XFxcIl1cXG5cXG4qKjMuIOa4suafk+S8mOWMlioqXFxuXFxuKiAqKumBv+WFjeS9v+eUqOaYgui0teeahCBDU1Mg5bGe5oCn77yaKipcXG4gICAgKiDlpoIgYGJveC1zaGFkb3dg44CBYGJvcmRlci1yYWRpdXNg44CBYGZpbHRlcmAg562J77yM5Lya5aKe5Yqg5riy5p+T5oiQ5pys44CCXFxuICAgICog5bC96YeP5L2/55So5oCn6IO95pu05aW955qE5pu/5Luj5pa55qGI44CCXFxuKiAqKuWIqeeUqOehrOS7tuWKoOmAn++8mioqXFxuICAgICog5L2/55SoIGB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMClgIOaIliBgd2lsbC1jaGFuZ2VgIOWxnuaAp++8jOWwhuWFg+e0oOaPkOWNh+WIsOeLrOeri+eahOa4suafk+Wxgu+8jOWIqeeUqCBHUFUg5Yqg6YCf44CCXFxuKiAqKuWHj+WwkemHjee7mOWSjOmHjeaOku+8mioqXFxuICAgICog5bC96YeP5om56YeP5L+u5pS55qC35byP77yM6YG/5YWN6aKR57mB6Kem5Y+R6YeN57uY5ZKM6YeN5o6S44CCXFxuICAgICog5L2/55SoIGByZXF1ZXN0QW5pbWF0aW9uRnJhbWVgIOaWueazle+8jOWcqOa1j+iniOWZqOmHjee7mOS5i+WJjeaJp+ihjOWKqOeUu+OAglxcbiAgICAqIOmBv+WFjeS9v+eUqHRhYmxl5biD5bGA44CCXFxuXFxuKio0LiDotYTmupDkvJjljJYqKlxcblxcbiogKirkvb/nlKggQ1NTIFNwcml0ZXPvvJoqKlxcbiAgICAqIOWwhuWkmuS4quWwj+Wbvuagh+WQiOW5tuaIkOS4gOW8oOWbvueJh++8jOWHj+WwkSBIVFRQIOivt+axguOAglxcbiogKirkvb/nlKjlrZfkvZPlm77moIfvvJoqKlxcbiAgICAqIOS9v+eUqOWtl+S9k+Wbvuagh++8iOWmgiBGb250IEF3ZXNvbWXvvInku6Pmm7/lm77niYflm77moIfvvIzlh4/lsJHmlofku7blpKflsI/jgIJcXG4qICoq5LyY5YyW5Zu+54mH77yaKipcXG4gICAgKiDlr7ljc3PkuK3nlKjliLDnmoTog4zmma/lm77niYfov5vooYzljovnvKnvvIzkvb/nlKh3ZWJw562J5pu05LyY55qE5Zu+54mH5qC85byP44CCXFxuKiAqKuaMiemcgOWKoOi9vSBDU1PvvJoqKlxcbiAgICAqIOS9v+eUqOWqkuS9k+afpeivou+8jOWwhmNzc+WIhuS4uuWkmuS4quaWh+S7tu+8jOWcqOmcgOimgeeahOmhtemdouW8leWFpemcgOimgeeahGNzc+OAglxcblxcbioqNS4g5oCn6IO95bel5YW3KipcXG5cXG4qICoq5L2/55So5rWP6KeI5Zmo5byA5Y+R6ICF5bel5YW377yaKipcXG4gICAgKiDliKnnlKggQ2hyb21lIERldlRvb2xzIOetieW3peWFt++8jOWIhuaekCBDU1Mg5oCn6IO955O26aKI44CCXFxuKiAqKuS9v+eUqCBMaWdodGhvdXNl77yaKipcXG4gICAgKiBMaWdodGhvdXNlIOaYr+iwt+atjOaOqOWHuueahOS4gOS4quW8gOa6kOW3peWFt++8jOeUqOS6juaUuei/m+e9kee7nOW6lOeUqOeahOi0qOmHj+OAgiDmgqjlj6/ku6XlsIblhbbkvZzkuLrkuIDkuKogQ2hyb21lIOaJqeWxleeoi+W6j+i/kOihjO+8jOaIluS7juWRveS7pOihjOi/kOihjOOAgiDlvZPmgqjkuLogTGlnaHRob3VzZSDmj5DkvpvkuIDkuKrnvZHlnYDml7bvvIzlroPlsIbpkojlr7nmraTpobXpnaLov5DooYzkuIDov57kuLLnmoTlrqHorqHvvIznhLblkI7nlJ/miJDkuIDkuKrmnInlhbPor6XpobXpnaLmgKfog73nmoTmiqXlkYrjgIIg5Zyo6L+Z5Lu95oql5ZGK5Lit77yM5L2g5Y+v5Lul5riF5pmw55qE55yL5YiwY3Nz55qE5oCn6IO96Zeu6aKY44CCXFxuXFxuKirmgLvnu5MqKlxcblxcbkNTUyDkvJjljJbmmK/kuIDkuKrnu7zlkIjmgKfnmoTov4fnqIvvvIzpnIDopoHku47ku6PnoIHnu4Tnu4fjgIHpgInmi6nlmajjgIHmuLLmn5PlkozotYTmupDnrYnlpJrkuKrmlrnpnaLov5vooYzogIPomZHjgILpgJrov4flkIjnkIbnmoTkvJjljJbnrZbnlaXvvIzlj6/ku6XmmL7okZfmj5DljYfnvZHnq5nnmoTmgKfog73lkoznlKjmiLfkvZPpqozjgIJcXG5cIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=